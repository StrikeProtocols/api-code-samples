{"info": {"title": "Strike Exchange API", "version": "v1.0", "description": "The Strike Protocols Exchange API", "contact": {"name": "Strike Protocols Support", "email": "support@strikeprotocols.com", "url": "https://strikeprotocols.com"}, "license": {"name": "Proprietary", "url": "https://strikeprotocols.com/terms-of-service.html"}}, "tags": [{"name": "Custodians", "description": "Manage Custodians"}, {"name": "Customers", "description": "Customer Management"}, {"name": "Sandbox", "description": "Helper function for testing in the sandbox"}, {"name": "Settlements", "description": "Settlement Management"}, {"name": "Symbols", "description": "Symbol Management"}, {"name": "Trades", "description": "Trade Management"}, {"name": "Webhooks", "description": "Webhook Management"}], "paths": {"/v1/api-key": {"get": {"summary": "Get API Key", "tags": ["Customers"], "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"apiKey": "8JIFlGNjT2iCNrTUeka18RxNrI21v1BBfmNs5FiRmXYKxeF2hLcSRGNqKS2ZRDFdgvcPqQ4XCTAyPmfCuJuuqw==", "venueIdentifier": "123456", "createdBy": "test@venue.com"}, "schema": {"$ref": "#/components/schemas/ApiKey"}}}}}, "security": [], "operationId": "get-api-key", "deprecated": false}}, "/v1/custodians": {"get": {"summary": "List Custodians", "tags": ["Custodians"], "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"example": [{"identifier": "primetrust", "status": "Enabled", "accountIdentifier": "123", "balance": [{"amount": "100.00000000", "symbol": "XXBT"}]}], "schema": {"items": {"$ref": "#/components/schemas/Custodian"}, "example": [{"identifier": "primetrust", "status": "Enabled", "accountIdentifier": "123", "balance": [{"amount": "100.00000000", "symbol": "XXBT"}]}], "type": "array"}}}}}, "security": [], "operationId": "list-custodians", "deprecated": false}}, "/v1/custodians/{custodianIdentifier}": {"get": {"summary": "Get Custodian", "tags": ["Custodians"], "parameters": [{"schema": {"type": "string"}, "in": "path", "name": "custodianIdentifier", "required": true, "description": "The unique identifier of the custodian"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"identifier": "primetrust", "status": "Enabled", "accountIdentifier": "123", "balance": [{"amount": "100.00000000", "symbol": "XXBT"}]}, "schema": {"$ref": "#/components/schemas/Custodian"}}}}}, "security": [], "operationId": "get-custodian", "deprecated": false}}, "/v1/custodians/{custodianIdentifier}/deposit-instructions": {"get": {"summary": "Get Custodian Deposit Instructions", "tags": ["Custodians"], "parameters": [{"schema": {"type": "string"}, "in": "path", "name": "custodianIdentifier", "required": true, "description": "The unique identifier of the custodian"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"example": [{"symbol": "USD", "walletAddress": "", "destinationTag": "", "signetAddress": "", "wireInstructions": {"fields": [{"label": "Depository Bank Name", "values": ["Pacific Mercantile Bank"]}, {"label": "Bank Address", "values": ["949 South Coast Drive, Third Floor, Costa Mesa, CA 92626"]}, {"label": "Bank Phone", "values": ["1 (702) 840-4000"]}, {"label": "Credit To", "values": ["Prime Trust, LLC"]}, {"label": "Address", "values": ["330 S Rampart Ave, Suite 260, Las Vegas, NV 89145"]}, {"label": "Routing Number", "values": ["122242869"]}, {"label": "Account Number", "values": ["45585603"]}, {"label": "SWIFT Code", "values": ["PMERUS66"]}], "note": ""}}, {"symbol": "XXBT", "walletAddress": "3FZbgi29cpjq2GjdwV8eyHuJJnkLtktZc5", "destinationTag": "", "signetAddress": "", "wireInstructions": {"fields": [], "note": ""}}], "schema": {"items": {"$ref": "#/components/schemas/CustodianDepositInstructions"}, "example": [{"symbol": "USD", "walletAddress": "", "destinationTag": "", "signetAddress": "", "wireInstructions": {"fields": [{"label": "Depository Bank Name", "values": ["Pacific Mercantile Bank"]}, {"label": "Bank Address", "values": ["949 South Coast Drive, Third Floor, Costa Mesa, CA 92626"]}, {"label": "Bank Phone", "values": ["1 (702) 840-4000"]}, {"label": "Credit To", "values": ["Prime Trust, LLC"]}, {"label": "Address", "values": ["330 S Rampart Ave, Suite 260, Las Vegas, NV 89145"]}, {"label": "Routing Number", "values": ["122242869"]}, {"label": "Account Number", "values": ["45585603"]}, {"label": "SWIFT Code", "values": ["PMERUS66"]}], "note": ""}}, {"symbol": "XXBT", "walletAddress": "3FZbgi29cpjq2GjdwV8eyHuJJnkLtktZc5", "destinationTag": "", "signetAddress": "", "wireInstructions": {"fields": [], "note": ""}}], "type": "array"}}}}}, "security": [], "operationId": "get-custodian-deposit-instructions", "deprecated": false}}, "/v1/custodians/{custodianIdentifier}/deposits": {"get": {"summary": "List Custodian Deposits", "tags": ["Custodians"], "parameters": [{"schema": {"type": "string"}, "in": "path", "name": "custodianIdentifier", "required": true, "description": "The unique identifier of the custodian"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"example": [{"amount": "100.00000000", "symbol": "XXBT", "identifier": "207854d1-da54-4b02-bafe-e0315240b429", "status": "Completed", "createdAt": "2020-08-24T08:51:43.000+00:00", "updatedAt": "2020-08-24T08:51:43.000+00:00", "error": "", "source": ""}], "schema": {"items": {"$ref": "#/components/schemas/CustodianDeposit"}, "example": [{"amount": "100.00000000", "symbol": "XXBT", "identifier": "207854d1-da54-4b02-bafe-e0315240b429", "status": "Completed", "createdAt": "2020-08-24T08:51:43.000+00:00", "updatedAt": "2020-08-24T08:51:43.000+00:00", "error": "", "source": ""}], "type": "array"}}}}}, "security": [], "operationId": "list-custodian-deposits", "deprecated": false}}, "/v1/custodians/{custodianIdentifier}/withdrawal-destinations": {"get": {"summary": "List Custodian Withdrawal Destinations", "tags": ["Custodians"], "parameters": [{"schema": {"type": "string"}, "in": "path", "name": "custodianIdentifier", "required": true, "description": "The unique identifier of the custodian"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"example": [{"identifier": "5fb38f34-5c82-4b6f-b913-f8ad65b568ff", "name": "My BitCoin wallet", "destinationType": "Crypto", "symbol": "XXBT", "address": "1BvBMSEYstWetqTFn5Au4m4GFg7xJaNVN2", "destinationTag": "", "status": "Completed", "createdAt": "2020-09-07T11:17:24.000+00:00", "updatedAt": "2020-09-07T11:17:24.000+00:00"}], "schema": {"items": {"$ref": "#/components/schemas/WithdrawalDestination"}, "example": [{"identifier": "5fb38f34-5c82-4b6f-b913-f8ad65b568ff", "name": "My BitCoin wallet", "destinationType": "Crypto", "symbol": "XXBT", "address": "1BvBMSEYstWetqTFn5Au4m4GFg7xJaNVN2", "destinationTag": "", "status": "Completed", "createdAt": "2020-09-07T11:17:24.000+00:00", "updatedAt": "2020-09-07T11:17:24.000+00:00"}], "type": "array"}}}}}, "security": [], "operationId": "list-custodian-withdrawal-destinations", "deprecated": false}, "post": {"summary": "Create Withdrawal Destination", "tags": ["Custodians"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}, {"schema": {"type": "string"}, "in": "path", "name": "custodianIdentifier", "required": true, "description": "The unique identifier of the custodian"}], "requestBody": {"content": {"application/json": {"example": {"name": "My BitCoin wallet", "destinationType": "Crypto", "symbol": "XXBT", "bankTransferDetails": {"bankName": "", "bankAccountName": "", "bankAccountType": "savings", "bankAccountNumber": "", "routingNumber": "", "internationalDetails": {"intermediaryBankName": "", "intermediaryBankReference": "", "intermediaryBankAddress": {"street1": "", "street2": "", "city": "", "region": "", "postalCode": "", "country": ""}, "swiftCode": ""}}, "walletAddress": "1BvBMSEYstWetqTFn5Au4m4GFg7xJaNVN2", "destinationTag": ""}, "schema": {"$ref": "#/components/schemas/CreateWithdrawalDestination"}}}, "required": true}, "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"identifier": "5fb38f34-5c82-4b6f-b913-f8ad65b568ff", "name": "My BitCoin wallet", "destinationType": "Crypto", "symbol": "XXBT", "address": "1BvBMSEYstWetqTFn5Au4m4GFg7xJaNVN2", "destinationTag": "", "status": "Completed", "createdAt": "2020-09-07T11:17:24.000+00:00", "updatedAt": "2020-09-07T11:17:24.000+00:00"}, "schema": {"$ref": "#/components/schemas/WithdrawalDestination"}}}}}, "security": [], "operationId": "create-withdrawal-destination", "deprecated": false}}, "/v1/custodians/{custodianIdentifier}/withdrawal-destinations/{withdrawalDestinationIdentifier}": {"delete": {"summary": "Delete Withdrawal Destination", "tags": ["Custodians"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}, {"schema": {"type": "string"}, "in": "path", "name": "custodianIdentifier", "required": true, "description": "The unique identifier of the custodian"}, {"schema": {"type": "string"}, "in": "path", "name": "withdrawalDestinationIdentifier", "required": true, "description": "The unique identifier of the withdrawal destination"}], "responses": {"204": {"description": "", "content": {}}}, "security": [], "operationId": "delete-withdrawal-destination", "deprecated": false}, "get": {"summary": "Get Custodian Withdrawal Destinations", "tags": ["Custodians"], "parameters": [{"schema": {"type": "string"}, "in": "path", "name": "custodianIdentifier", "required": true, "description": "The unique identifier of the custodian"}, {"schema": {"type": "string"}, "in": "path", "name": "withdrawalDestinationIdentifier", "required": true, "description": "The unique identifier of the withdrawal destination"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"identifier": "5fb38f34-5c82-4b6f-b913-f8ad65b568ff", "name": "My BitCoin wallet", "destinationType": "Crypto", "symbol": "XXBT", "address": "1BvBMSEYstWetqTFn5Au4m4GFg7xJaNVN2", "destinationTag": "", "status": "Completed", "createdAt": "2020-09-07T11:17:24.000+00:00", "updatedAt": "2020-09-07T11:17:24.000+00:00"}, "schema": {"$ref": "#/components/schemas/WithdrawalDestination"}}}}}, "security": [], "operationId": "get-custodian-withdrawal-destinations", "deprecated": false}}, "/v1/custodians/{custodianIdentifier}/withdrawals": {"get": {"summary": "List Custodian Withdrawals", "tags": ["Custodians"], "parameters": [{"schema": {"type": "string"}, "in": "query", "name": "from", "required": false, "description": "Filter to withdrawals on or after this date/time"}, {"schema": {"type": "string"}, "in": "query", "name": "to", "required": false, "description": "Filter to withdrawals before this date/time"}, {"schema": {"type": "string"}, "in": "path", "name": "custodianIdentifier", "required": true, "description": "The unique identifier of the custodian"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"example": [{"identifier": "5fb38f34-5c82-4b6f-b913-f8ad65b568ff", "completedAt": "2020-09-07T11:17:24.000+00:00", "venueWithdrawalIdentifier": "abcdef4-5c82-4b6f-b913-f8ad65b568ff", "amount": "50.000000", "symbol": "XXBT", "status": "Completed"}], "schema": {"items": {"$ref": "#/components/schemas/CustodianWithdrawal"}, "example": [{"identifier": "5fb38f34-5c82-4b6f-b913-f8ad65b568ff", "completedAt": "2020-09-07T11:17:24.000+00:00", "venueWithdrawalIdentifier": "abcdef4-5c82-4b6f-b913-f8ad65b568ff", "amount": "50.000000", "symbol": "XXBT", "status": "Completed"}], "type": "array"}}}}}, "security": [], "operationId": "list-custodian-withdrawals", "deprecated": false}, "post": {"summary": "Request Custodian Withdrawal", "tags": ["Custodians"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}, {"schema": {"type": "string"}, "in": "path", "name": "custodianIdentifier", "required": true, "description": "The unique identifier of the custodian"}], "requestBody": {"content": {"application/json": {"example": {"venueWithdrawalIdentifier": "112ba456-5c82-4b6f-b913-f8ad65b568ff", "amount": "50.00000", "symbol": "XXBT", "destinationIdentifier": "5fb38f34-5c82-4b6f-b913-f8ad65b568ff"}, "schema": {"$ref": "#/components/schemas/RequestCustodianWithdrawal"}}}, "required": true}, "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"identifier": "5fb38f34-5c82-4b6f-b913-f8ad65b568ff", "completedAt": "2020-09-07T11:17:24.000+00:00", "venueWithdrawalIdentifier": "abcdef4-5c82-4b6f-b913-f8ad65b568ff", "amount": "50.000000", "symbol": "XXBT", "status": "Completed"}, "schema": {"$ref": "#/components/schemas/CustodianWithdrawal"}}}}}, "security": [], "operationId": "request-custodian-withdrawal", "deprecated": false}}, "/v1/customers": {"get": {"summary": "List Customers", "tags": ["Customers"], "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"example": [{"allowedCustodians": ["primetrust"], "custodian": "primetrust", "custodianAccountIdentifier": "123", "identifier": "123456", "name": "ACME Inc", "FIXAccountIdentifier": "ABC123", "status": "Active", "domicile": "US"}], "schema": {"items": {"$ref": "#/components/schemas/CustomerInfo"}, "example": [{"allowedCustodians": ["primetrust"], "custodian": "primetrust", "custodianAccountIdentifier": "123", "identifier": "123456", "name": "ACME Inc", "FIXAccountIdentifier": "ABC123", "status": "Active", "domicile": "US"}], "type": "array"}}}}}, "security": [], "operationId": "list-customers", "deprecated": false}}, "/v1/customers/{customerIdentifier}": {"get": {"summary": "Get Customer", "tags": ["Customers"], "parameters": [{"schema": {"type": "string"}, "in": "path", "name": "customerIdentifier", "required": true, "description": "The unique identifier (Strike Customer Number)"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"allowedCustodians": ["primetrust"], "custodian": "primetrust", "custodianAccountIdentifier": "123", "depositBalance": [{"amount": "100.00000000", "symbol": "XXBT"}], "identifier": "123456", "name": "ACME Inc", "FIXAccountIdentifier": "ABC123", "status": "Active", "domicile": "US"}, "schema": {"$ref": "#/components/schemas/CustomerInfoWithBalances"}}}}}, "security": [], "operationId": "get-customer", "deprecated": false}, "patch": {"summary": "Change Customer", "tags": ["Customers"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}, {"schema": {"type": "string"}, "in": "path", "name": "customerIdentifier", "required": true, "description": "The unique identifier (Strike Customer Number)"}], "requestBody": {"content": {"application/json": {"example": {"custodian": "primetrust", "FIXAccountIdentifier": "ABC123"}, "schema": {"$ref": "#/components/schemas/ChangeCustomer"}}}, "required": true}, "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"allowedCustodians": ["primetrust"], "custodian": "primetrust", "custodianAccountIdentifier": "123", "depositBalance": [{"amount": "100.00000000", "symbol": "XXBT"}], "identifier": "123456", "name": "ACME Inc", "FIXAccountIdentifier": "ABC123", "status": "Active", "domicile": "US"}, "schema": {"$ref": "#/components/schemas/CustomerInfoWithBalances"}}}}}, "security": [], "operationId": "change-customer", "deprecated": false}}, "/v1/customers/{customerIdentifier}/deposits": {"get": {"summary": "List Customer Deposits", "tags": ["Customers"], "parameters": [{"schema": {"type": "string"}, "in": "query", "name": "from", "required": false, "description": "Filter to deposits on or after this date/time"}, {"schema": {"type": "string"}, "in": "query", "name": "to", "required": false, "description": "Filter to deposits before this date/time"}, {"schema": {"type": "string"}, "in": "path", "name": "customerIdentifier", "required": true, "description": "The unique identifier (Strike Customer Number)"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"example": [{"amount": "100.00000000", "symbol": "XXBT", "identifier": "207854d1-da54-4b02-bafe-e0315240b429", "customerIdentifier": "123456", "completedAt": "2020-08-24T08:51:43.000+00:00"}], "schema": {"items": {"$ref": "#/components/schemas/CustomerDeposit"}, "example": [{"amount": "100.00000000", "symbol": "XXBT", "identifier": "207854d1-da54-4b02-bafe-e0315240b429", "customerIdentifier": "123456", "completedAt": "2020-08-24T08:51:43.000+00:00"}], "type": "array"}}}}}, "security": [], "operationId": "list-customer-deposits", "deprecated": false}}, "/v1/customers/{customerIdentifier}/onboard": {"post": {"summary": "Request Customer Onboarding", "tags": ["Customers"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}, {"schema": {"type": "string"}, "in": "path", "name": "customerIdentifier", "required": true, "description": "The unique identifier (Strike Customer Number)"}], "requestBody": {"content": {"application/json": {"example": {"custodian": "primetrust", "name": "ACME Inc", "FIXAccountIdentifier": "ABC123"}, "schema": {"$ref": "#/components/schemas/CreateCustomerOnboardingRequest"}}}, "required": true}, "responses": {"200": {"description": "", "content": {}}}, "security": [], "operationId": "request-customer-onboarding", "deprecated": false}}, "/v1/customers/{customerIdentifier}/withdrawal-requests": {"get": {"summary": "List Customer Withdrawal Requests", "tags": ["Customers"], "parameters": [{"schema": {"type": "string"}, "in": "path", "name": "customerIdentifier", "required": true, "description": "The unique identifier (Strike Customer Number)"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"example": [{"identifier": "fdb91b4b-b18f-4477-92d4-0482d7b6290a", "requested": [{"amount": "100.00000000", "symbol": "XXBT"}, {"amount": "200.00000000", "symbol": "XETH"}], "requestedAt": "2020-09-07T11:17:24.000+00:00"}], "schema": {"items": {"$ref": "#/components/schemas/CustomerWithdrawalRequest"}, "example": [{"identifier": "fdb91b4b-b18f-4477-92d4-0482d7b6290a", "requested": [{"amount": "100.00000000", "symbol": "XXBT"}, {"amount": "200.00000000", "symbol": "XETH"}], "requestedAt": "2020-09-07T11:17:24.000+00:00"}], "type": "array"}}}}}, "security": [], "operationId": "list-customer-withdrawal-requests", "deprecated": false}}, "/v1/customers/{customerIdentifier}/withdrawal-requests/{identifier}": {"delete": {"summary": "Reject Customer Withdrawal Request", "tags": ["Customers"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}, {"schema": {"type": "string"}, "in": "path", "name": "customerIdentifier", "required": true, "description": "The unique identifier (Strike Customer Number)"}, {"schema": {"type": "string"}, "in": "path", "name": "identifier", "required": true, "description": "The unique identifier of the withdrawal request"}], "responses": {"204": {"description": "", "content": {}}}, "security": [], "operationId": "reject-customer-withdrawal-request", "deprecated": false}}, "/v1/customers/{customerIdentifier}/withdrawal-requests/{identifier}/process": {"post": {"summary": "Process Customer Withdrawal Request", "tags": ["Customers"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}, {"schema": {"type": "string"}, "in": "path", "name": "customerIdentifier", "required": true, "description": "The unique identifier (Strike Customer Number)"}, {"schema": {"type": "string"}, "in": "path", "name": "identifier", "required": true, "description": "The unique identifier of the withdrawal request"}], "responses": {"200": {"description": "", "content": {}}}, "security": [], "operationId": "process-customer-withdrawal-request", "deprecated": false}}, "/v1/customers/{customerIdentifier}/withdrawals": {"get": {"summary": "List Customer Withdrawals", "tags": ["Customers"], "parameters": [{"schema": {"type": "string"}, "in": "query", "name": "from", "required": false, "description": "Filter to withdrawals on or after this date/time"}, {"schema": {"type": "string"}, "in": "query", "name": "to", "required": false, "description": "Filter to withdrawals before this date/time"}, {"schema": {"type": "string"}, "in": "path", "name": "customerIdentifier", "required": true, "description": "The unique identifier (Strike Customer Number)"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"example": [{"identifier": "5fb38f34-5c82-4b6f-b913-f8ad65b568ff", "customerIdentifier": "12345", "completedAt": "2020-09-07T11:17:24.000+00:00", "venueWithdrawalIdentifier": "fbbeda06-fe6c-47f9-b25b-7ba81c9af616", "amounts": [{"amount": "100.00000000", "symbol": "XXBT"}, {"amount": "200.00000000", "symbol": "XETH"}], "status": "Completed"}], "schema": {"items": {"$ref": "#/components/schemas/CustomerWithdrawal"}, "example": [{"identifier": "5fb38f34-5c82-4b6f-b913-f8ad65b568ff", "customerIdentifier": "12345", "completedAt": "2020-09-07T11:17:24.000+00:00", "venueWithdrawalIdentifier": "fbbeda06-fe6c-47f9-b25b-7ba81c9af616", "amounts": [{"amount": "100.00000000", "symbol": "XXBT"}, {"amount": "200.00000000", "symbol": "XETH"}], "status": "Completed"}], "type": "array"}}}}}, "security": [], "operationId": "list-customer-withdrawals", "deprecated": false}, "post": {"summary": "Create Customer Withdrawal", "tags": ["Customers"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}, {"schema": {"type": "string"}, "in": "path", "name": "customerIdentifier", "required": true, "description": "The unique identifier (Strike Customer Number)"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"identifier": "1234"}, "schema": {"$ref": "#/components/schemas/CreatedCustomerWithdrawal"}}}}}, "security": [], "operationId": "create-customer-withdrawal", "deprecated": false}}, "/v1/settlement-plans": {"get": {"summary": "List Settlement Plans", "tags": ["Settlements"], "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"example": [{"identifier": "VNUE-000001", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5"}], "schema": {"items": {"$ref": "#/components/schemas/SettlementPlanShort"}, "example": [{"identifier": "VNUE-000001", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5"}], "type": "array"}}}}}, "security": [], "operationId": "list-settlement-plans", "deprecated": false}, "post": {"summary": "Create Settlement Plan", "tags": ["Settlements"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}], "requestBody": {"content": {"application/json": {"example": {"custodian": "primetrust", "tradeIdentifiers": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"]}, "schema": {"$ref": "#/components/schemas/CreateSettlementPlan"}}}, "required": true}, "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"identifier": "VNUE-000001", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "custodian": "primetrust", "flowHash": "6fe834fd3ab3305ddffbe50f8c64b8d94b94d11f3aa7271459d9f493ebb91abf", "venueFunding": {"status": "NotFunded", "fundingRequired": [{"amount": "10", "symbol": "USD"}]}, "customerFunding": [{"status": "NotFunded", "customerIdentifier": "customerId2", "fundingRequired": [{"amount": "100", "symbol": "USD"}, {"amount": "20000", "symbol": "XRP"}]}, {"status": "Funded", "customerIdentifier": "customerId1", "fundingRequired": []}], "inflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "30000"}], "outflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "10000"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}], "tradeIdentifiers": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"]}, "schema": {"$ref": "#/components/schemas/SettlementPlan"}}}}}, "security": [], "operationId": "create-settlement-plan", "deprecated": false}}, "/v1/settlement-plans/{settlementIdentifier}": {"delete": {"summary": "Cancel Settlement Plan", "tags": ["Settlements"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}, {"schema": {"type": "string"}, "in": "path", "name": "settlementIdentifier", "required": true, "description": "The unique identifier of the settlement"}], "responses": {"204": {"description": "", "content": {}}, "404": {"description": "", "content": {}}}, "security": [], "operationId": "cancel-settlement-plan", "deprecated": false}, "get": {"summary": "Get Settlement Plan", "tags": ["Settlements"], "parameters": [{"schema": {"type": "string"}, "in": "path", "name": "settlementIdentifier", "required": true, "description": "The unique identifier of the settlement"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"identifier": "VNUE-000001", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "custodian": "primetrust", "flowHash": "6fe834fd3ab3305ddffbe50f8c64b8d94b94d11f3aa7271459d9f493ebb91abf", "venueFunding": {"status": "NotFunded", "fundingRequired": [{"amount": "10", "symbol": "USD"}]}, "customerFunding": [{"status": "NotFunded", "customerIdentifier": "customerId2", "fundingRequired": [{"amount": "100", "symbol": "USD"}, {"amount": "20000", "symbol": "XRP"}]}, {"status": "Funded", "customerIdentifier": "customerId1", "fundingRequired": []}], "inflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "30000"}], "outflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "10000"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}], "tradeIdentifiers": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"]}, "schema": {"$ref": "#/components/schemas/SettlementPlan"}}}}}, "security": [], "operationId": "get-settlement-plan", "deprecated": false}}, "/v1/settlement-plans/{settlementIdentifier}/customers/{customerIdentifier}": {"delete": {"summary": "Remove Customer From Settlement Plan", "tags": ["Settlements"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}, {"schema": {"type": "string"}, "in": "path", "name": "settlementIdentifier", "required": true, "description": "The unique identifier of the settlement"}, {"schema": {"type": "string"}, "in": "path", "name": "customerIdentifier", "required": true, "description": "The unique identifier (Strike Customer Number)"}], "responses": {"204": {"description": "", "content": {}}, "404": {"description": "", "content": {}}}, "security": [], "operationId": "remove-customer-from-settlement-plan", "deprecated": false}}, "/v1/settlement-plans/{settlementIdentifier}/funding-requests": {"post": {"summary": "Send Funding Requests For A Settlement Plan", "tags": ["Settlements"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}, {"schema": {"type": "string"}, "in": "path", "name": "settlementIdentifier", "required": true, "description": "The unique identifier of the settlement"}], "responses": {"200": {"description": "", "content": {}}, "404": {"description": "", "content": {}}}, "security": [], "operationId": "send-funding-requests-for-a-settlement-plan", "deprecated": false}}, "/v1/settlement-plans/{settlementIdentifier}/settle": {"post": {"summary": "Request Settlement", "tags": ["Settlements"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}, {"schema": {"type": "string"}, "in": "path", "name": "settlementIdentifier", "required": true, "description": "The unique identifier of the settlement"}], "requestBody": {"content": {"application/json": {"example": {"settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "signedSettlementFlowHash": "MEUCIQDUy/APgiPWDU7D7AVTWg/Jy3Ywp02Ff6P1TOtR0fWH6AIgQLxOpT8bcxX7NE8/o9k/HBAYHvnt81UH4JAHDKhJMqM="}, "schema": {"$ref": "#/components/schemas/SettlementRequest"}}}, "required": true}, "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"identifier": "VNUE-000001", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "status": "Completed", "startedAt": "2020-09-07T11:17:23.456Z", "completedAt": "2020-09-07T11:17:24.789+00:00", "error": ""}, "schema": {"$ref": "#/components/schemas/SettlementShort"}}}}}, "security": [], "operationId": "request-settlement", "deprecated": false}}, "/v1/settlement-plans/{settlementIdentifier}/trades": {"patch": {"summary": "Add/Remove Trades To/From Settlement Plan", "tags": ["Settlements"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}, {"schema": {"type": "string"}, "in": "path", "name": "settlementIdentifier", "required": true, "description": "The unique identifier of the settlement"}], "requestBody": {"content": {"application/json": {"example": {"addTrades": ["tradeId1", "tradeId2"], "removeTrades": ["tradeId3", "tradeId4"]}, "schema": {"$ref": "#/components/schemas/ModifyTradesSettlementPlan"}}}, "required": true}, "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"identifier": "VNUE-000001", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "custodian": "primetrust", "flowHash": "6fe834fd3ab3305ddffbe50f8c64b8d94b94d11f3aa7271459d9f493ebb91abf", "venueFunding": {"status": "NotFunded", "fundingRequired": [{"amount": "10", "symbol": "USD"}]}, "customerFunding": [{"status": "NotFunded", "customerIdentifier": "customerId2", "fundingRequired": [{"amount": "100", "symbol": "USD"}, {"amount": "20000", "symbol": "XRP"}]}, {"status": "Funded", "customerIdentifier": "customerId1", "fundingRequired": []}], "inflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "30000"}], "outflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "10000"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}], "tradeIdentifiers": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"]}, "schema": {"$ref": "#/components/schemas/SettlementPlan"}}}}}, "security": [], "operationId": "add-remove-trades-to-from-settlement-plan", "deprecated": false}}, "/v1/settlements": {"get": {"summary": "List Customer Settlements", "tags": ["Settlements"], "parameters": [{"schema": {"type": "string"}, "in": "query", "name": "from", "required": false, "description": "Filter to settlements on or after this date/time"}, {"schema": {"type": "string"}, "in": "query", "name": "to", "required": false, "description": "Filter to settlements before this date/time"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"example": [{"identifier": "VNUE-000001", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "status": "Completed", "startedAt": "2020-09-07T11:17:23.456Z", "completedAt": "2020-09-07T11:17:24.789+00:00", "error": ""}], "schema": {"items": {"$ref": "#/components/schemas/SettlementShort"}, "example": [{"identifier": "VNUE-000001", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "status": "Completed", "startedAt": "2020-09-07T11:17:23.456Z", "completedAt": "2020-09-07T11:17:24.789+00:00", "error": ""}], "type": "array"}}}}}, "security": [], "operationId": "list-customer-settlements", "deprecated": false}}, "/v1/settlements/{settlementIdentifier}": {"get": {"summary": "Get Settlement", "tags": ["Settlements"], "parameters": [{"schema": {"type": "string"}, "in": "path", "name": "settlementIdentifier", "required": true, "description": "The unique identifier of the settlement"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"identifier": "VNUE-000001", "status": "Completed", "inflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "30000"}], "outflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "10000"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}], "flowHash": "6fe834fd3ab3305ddffbe50f8c64b8d94b94d11f3aa7271459d9f493ebb91abf", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "tradeIdentifiers": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"], "startedAt": "2020-09-07T11:17:23.456+00:00", "completedAt": "2020-09-07T11:17:24.789+00:00", "error": ""}, "schema": {"$ref": "#/components/schemas/Settlement"}}}}}, "security": [], "operationId": "get-settlement", "deprecated": false}}, "/v1/symbols": {"get": {"summary": "List Symbols", "tags": ["Symbols"], "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"example": [{"symbol": "XXBT", "strikeSymbol": "XBT", "custodianSymbols": [{"custodianIdentifier": "primetrust", "symbol": "BTC"}], "type": "Asset", "description": "Bitcoin", "precision": 8}], "schema": {"items": {"$ref": "#/components/schemas/SymbolInfo"}, "example": [{"symbol": "XXBT", "strikeSymbol": "XBT", "custodianSymbols": [{"custodianIdentifier": "primetrust", "symbol": "BTC"}], "type": "Asset", "description": "Bitcoin", "precision": 8}], "type": "array"}}}}}, "security": [], "operationId": "list-symbols", "deprecated": false}}, "/v1/trades": {"get": {"summary": "List Trades", "tags": ["Trades"], "parameters": [{"schema": {"type": "string"}, "in": "query", "name": "continuationToken", "required": false, "description": "Continuation token for pagination, that was returned from previous request"}, {"schema": {"type": "string"}, "in": "query", "name": "counterpartyIdentifier", "required": false, "description": "Filter to trades from this counterparty"}, {"schema": {"type": "string"}, "in": "query", "name": "from", "required": false, "description": "Filter to trades on or after this date/time"}, {"schema": {"type": "string"}, "in": "query", "name": "to", "required": false, "description": "Filter to trades before this date/time"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"continuationToken": "continuation-token", "trades": [{"baseSymbol": "XXBT", "counter": "100000.00000000", "counterpartyIdentifier": "123456", "dealt": "10", "executionDate": "2020-09-07T11:17:23.456+00:00", "identifier": "venue-trade-identifier", "liquidityIndicator": "Aggressive", "notes": "Trade notes", "rate": "10000.00000000", "receivedDate": "2020-09-07T11:17:24.000+00:00", "settlementNumber": "KRKN-000001", "side": "Buy", "source": "source-api-key", "status": "Open", "strikeFee": "0.02", "strikeFeeSymbol": "USD", "strikeTradeId": "strike-trade-id", "termSymbol": "USD", "tradeHash": "trade-hash", "venueFee": "0.00", "venueFeeSymbol": "USD"}]}, "schema": {"$ref": "#/components/schemas/TradeList"}}}}}, "security": [], "operationId": "list-trades", "deprecated": false}, "post": {"summary": "Submit Trade", "tags": ["Trades"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}], "requestBody": {"content": {"application/json": {"example": {"baseSymbol": "XBT", "counter": "100000.00000000", "counterpartyIdentifier": "123456", "dealt": "10", "executionDate": "2020-09-07T11:17:23.456+00:00", "identifier": "venue-trade-identifier", "liquidityIndicator": "Aggressive", "notes": "Trade notes", "rate": "10000.00000000", "side": "Buy", "termSymbol": "USD", "tradeHash": "trade-hash", "venueFee": "0.02", "venueFeeSymbol": "USD"}, "schema": {"$ref": "#/components/schemas/SubmitTrade"}}}, "required": true}, "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"baseSymbol": "XXBT", "counter": "100000.00000000", "counterpartyIdentifier": "123456", "dealt": "10", "executionDate": "2020-09-07T11:17:23.456+00:00", "identifier": "venue-trade-identifier", "liquidityIndicator": "Aggressive", "notes": "Trade notes", "rate": "10000.00000000", "receivedDate": "2020-09-07T11:17:24.000+00:00", "settlementNumber": "KRKN-000001", "side": "Buy", "source": "source-api-key", "status": "Open", "strikeFee": "0.02", "strikeFeeSymbol": "USD", "strikeTradeId": "strike-trade-id", "termSymbol": "USD", "tradeHash": "trade-hash", "venueFee": "0.00", "venueFeeSymbol": "USD"}, "schema": {"$ref": "#/components/schemas/TradeInfo"}}}}}, "security": [], "operationId": "submit-trade", "deprecated": false}}, "/v1/trades/{identifier}": {"delete": {"summary": "Cancel Trade", "tags": ["Trades"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}, {"schema": {"type": "string"}, "in": "path", "name": "identifier", "required": true, "description": "The unique identifier of the trade as supplied by the exchange"}], "responses": {"204": {"description": "", "content": {}}, "404": {"description": "", "content": {}}}, "security": [], "operationId": "cancel-trade", "deprecated": false}, "get": {"summary": "Get Trade", "tags": ["Trades"], "parameters": [{"schema": {"type": "string"}, "in": "path", "name": "identifier", "required": true, "description": "The unique identifier of the trade as supplied by the exchange"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"baseSymbol": "XXBT", "counter": "100000.00000000", "counterpartyIdentifier": "123456", "dealt": "10", "executionDate": "2020-09-07T11:17:23.456+00:00", "identifier": "venue-trade-identifier", "liquidityIndicator": "Aggressive", "notes": "Trade notes", "rate": "10000.00000000", "receivedDate": "2020-09-07T11:17:24.000+00:00", "settlementNumber": "KRKN-000001", "side": "Buy", "source": "source-api-key", "status": "Open", "strikeFee": "0.02", "strikeFeeSymbol": "USD", "strikeTradeId": "strike-trade-id", "termSymbol": "USD", "tradeHash": "trade-hash", "venueFee": "0.00", "venueFeeSymbol": "USD"}, "schema": {"$ref": "#/components/schemas/TradeInfo"}}}}, "404": {"description": "", "content": {}}}, "security": [], "operationId": "get-trade", "deprecated": false}, "patch": {"summary": "Update Trade", "tags": ["Trades"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}, {"schema": {"type": "string"}, "in": "path", "name": "identifier", "required": true, "description": "The unique identifier of the trade as supplied by the exchange"}], "requestBody": {"content": {"application/json": {"example": {"baseSymbol": "XBT", "counter": "100000.00000000", "counterpartyIdentifier": "123456", "dealt": "10", "rate": "10000.00000000", "side": "Buy", "termSymbol": "USD", "tradeHash": "trade-hash", "venueFee": "0.02", "venueFeeSymbol": "USD"}, "schema": {"$ref": "#/components/schemas/UpdateTrade"}}}, "required": true}, "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"baseSymbol": "XXBT", "counter": "100000.00000000", "counterpartyIdentifier": "123456", "dealt": "10", "executionDate": "2020-09-07T11:17:23.456+00:00", "identifier": "venue-trade-identifier", "liquidityIndicator": "Aggressive", "notes": "Trade notes", "rate": "10000.00000000", "receivedDate": "2020-09-07T11:17:24.000+00:00", "settlementNumber": "KRKN-000001", "side": "Buy", "source": "source-api-key", "status": "Open", "strikeFee": "0.02", "strikeFeeSymbol": "USD", "strikeTradeId": "strike-trade-id", "termSymbol": "USD", "tradeHash": "trade-hash", "venueFee": "0.00", "venueFeeSymbol": "USD"}, "schema": {"$ref": "#/components/schemas/TradeInfo"}}}}, "404": {"description": "", "content": {}}}, "security": [], "operationId": "update-trade", "deprecated": false}}, "/v1/webhook-config": {"delete": {"summary": "Delete Webhook Configuration", "tags": ["Webhooks"], "parameters": [], "responses": {"204": {"description": "", "content": {}}}, "security": [], "operationId": "delete-webhook-configuration", "deprecated": false}, "get": {"summary": "Get Webhook Configuration", "tags": ["Webhooks"], "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"url": "https://localhost/webhook-handler", "notificationEmail": "webhook@mailbox.com", "retries": 10, "retryInterval": 30}, "schema": {"$ref": "#/components/schemas/WebhookSettings"}}}}}, "security": [], "operationId": "get-webhook-configuration", "deprecated": false}, "post": {"summary": "Set Webhook Configuration", "tags": ["Webhooks"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}], "requestBody": {"content": {"application/json": {"example": {"url": "https://localhost/webhook-handler", "notificationEmail": "webhook@mailbox.com", "retries": 10, "retryInterval": 30}, "schema": {"$ref": "#/components/schemas/WebhookSettings"}}}, "required": true}, "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"url": "https://localhost/webhook-handler", "notificationEmail": "webhook@mailbox.com", "retries": 10, "retryInterval": 30}, "schema": {"$ref": "#/components/schemas/WebhookSettings"}}}}}, "security": [], "operationId": "set-webhook-configuration", "deprecated": false}}, "/v1/webhooks": {"get": {"summary": "List Webhooks", "tags": ["Webhooks"], "parameters": [{"schema": {"type": "string"}, "in": "query", "name": "from", "required": false, "description": "Filter to webhooks created on or after this date/time"}, {"schema": {"type": "string"}, "in": "query", "name": "to", "required": false, "description": "Filter to webhooks created before this date/time"}, {"schema": {"type": "boolean"}, "in": "query", "name": "undelivered", "required": false, "description": "Filter to webhooks that have not been successfully delivered"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"webhooks": [{"createdAt": "2020-09-08T11:20:00.000Z", "type": "CustomerStatusChanged", "sequenceNumber": 123, "customer": {"allowedCustodians": ["primetrust"], "custodian": "primetrust", "custodianAccountIdentifier": "321", "identifier": "123456", "name": "ACME Inc", "FIXAccountIdentifier": "ABC123", "status": "Active", "domicile": "US"}, "withdrawalRequest": {"identifier": "", "requested": [{"amount": "10.0000000", "symbol": "XXBT"}], "requestedAt": "2020-09-08T11:20:00.000+00:00"}, "deposit": {"amount": "10.00000000", "symbol": "XXBT", "identifier": "", "customerIdentifier": "", "completedAt": "2020-08-24T08:51:43.000+00:00"}, "withdrawal": {"identifier": "", "customerIdentifier": "", "completedAt": "2020-09-08T11:20:00.000+00:00", "venueWithdrawalIdentifier": "", "amounts": [{"amount": "10.0000000", "symbol": "XXBT"}], "status": "Completed"}, "settlementPlan": {"identifier": "VNUE-000001", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "custodian": "primetrust", "flowHash": "6fe834fd3ab3305ddffbe50f8c64b8d94b94d11f3aa7271459d9f493ebb91abf", "venueFunding": {"status": "NotFunded", "fundingRequired": [{"amount": "10", "symbol": "USD"}]}, "customerFunding": [{"status": "NotFunded", "customerIdentifier": "customerId2", "fundingRequired": [{"amount": "100", "symbol": "USD"}, {"amount": "20000", "symbol": "XRP"}]}, {"status": "Funded", "customerIdentifier": "customerId1", "fundingRequired": []}], "inflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "30000"}], "outflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "10000"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}], "tradeIdentifiers": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"]}, "settlement": {"identifier": "VNUE-000001", "status": "Completed", "inflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "30000"}], "outflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "10000"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}], "flowHash": "6fe834fd3ab3305ddffbe50f8c64b8d94b94d11f3aa7271459d9f493ebb91abf", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "tradeIdentifiers": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"], "startedAt": "2020-09-08T11:19:00.000+00:00", "completedAt": "2020-09-08T11:20:00.000+00:00", "error": ""}}], "nextWebhookSequenceNumber": 123}, "schema": {"$ref": "#/components/schemas/WebhooksList"}}}}}, "security": [], "operationId": "list-webhooks", "deprecated": false}}, "/v1/webhooks/delivered": {"post": {"summary": "Mark Webhook As Delivered", "tags": ["Webhooks"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}], "requestBody": {"content": {"application/json": {"schema": {}}}, "required": true}, "responses": {"200": {"description": "OK", "content": {"application/json": {"example": [{"createdAt": "2020-09-08T11:20:00.000Z", "type": "CustomerStatusChanged", "sequenceNumber": 123, "customer": {"allowedCustodians": ["primetrust"], "custodian": "primetrust", "custodianAccountIdentifier": "321", "identifier": "123456", "name": "ACME Inc", "FIXAccountIdentifier": "ABC123", "status": "Active", "domicile": "US"}, "withdrawalRequest": {"identifier": "", "requested": [{"amount": "10.0000000", "symbol": "XXBT"}], "requestedAt": "2020-09-08T11:20:00.000+00:00"}, "deposit": {"amount": "10.00000000", "symbol": "XXBT", "identifier": "", "customerIdentifier": "", "completedAt": "2020-08-24T08:51:43.000+00:00"}, "withdrawal": {"identifier": "", "customerIdentifier": "", "completedAt": "2020-09-08T11:20:00.000+00:00", "venueWithdrawalIdentifier": "", "amounts": [{"amount": "10.0000000", "symbol": "XXBT"}], "status": "Completed"}, "settlementPlan": {"identifier": "VNUE-000001", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "custodian": "primetrust", "flowHash": "6fe834fd3ab3305ddffbe50f8c64b8d94b94d11f3aa7271459d9f493ebb91abf", "venueFunding": {"status": "NotFunded", "fundingRequired": [{"amount": "10", "symbol": "USD"}]}, "customerFunding": [{"status": "NotFunded", "customerIdentifier": "customerId2", "fundingRequired": [{"amount": "100", "symbol": "USD"}, {"amount": "20000", "symbol": "XRP"}]}, {"status": "Funded", "customerIdentifier": "customerId1", "fundingRequired": []}], "inflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "30000"}], "outflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "10000"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}], "tradeIdentifiers": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"]}, "settlement": {"identifier": "VNUE-000001", "status": "Completed", "inflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "30000"}], "outflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "10000"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}], "flowHash": "6fe834fd3ab3305ddffbe50f8c64b8d94b94d11f3aa7271459d9f493ebb91abf", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "tradeIdentifiers": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"], "startedAt": "2020-09-08T11:19:00.000+00:00", "completedAt": "2020-09-08T11:20:00.000+00:00", "error": ""}}], "schema": {"items": {"$ref": "#/components/schemas/Webhook"}, "example": [{"createdAt": "2020-09-08T11:20:00.000Z", "type": "CustomerStatusChanged", "sequenceNumber": 123, "customer": {"allowedCustodians": ["primetrust"], "custodian": "primetrust", "custodianAccountIdentifier": "321", "identifier": "123456", "name": "ACME Inc", "FIXAccountIdentifier": "ABC123", "status": "Active", "domicile": "US"}, "withdrawalRequest": {"identifier": "", "requested": [{"amount": "10.0000000", "symbol": "XXBT"}], "requestedAt": "2020-09-08T11:20:00.000+00:00"}, "deposit": {"amount": "10.00000000", "symbol": "XXBT", "identifier": "", "customerIdentifier": "", "completedAt": "2020-08-24T08:51:43.000+00:00"}, "withdrawal": {"identifier": "", "customerIdentifier": "", "completedAt": "2020-09-08T11:20:00.000+00:00", "venueWithdrawalIdentifier": "", "amounts": [{"amount": "10.0000000", "symbol": "XXBT"}], "status": "Completed"}, "settlementPlan": {"identifier": "VNUE-000001", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "custodian": "primetrust", "flowHash": "6fe834fd3ab3305ddffbe50f8c64b8d94b94d11f3aa7271459d9f493ebb91abf", "venueFunding": {"status": "NotFunded", "fundingRequired": [{"amount": "10", "symbol": "USD"}]}, "customerFunding": [{"status": "NotFunded", "customerIdentifier": "customerId2", "fundingRequired": [{"amount": "100", "symbol": "USD"}, {"amount": "20000", "symbol": "XRP"}]}, {"status": "Funded", "customerIdentifier": "customerId1", "fundingRequired": []}], "inflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "30000"}], "outflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "10000"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}], "tradeIdentifiers": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"]}, "settlement": {"identifier": "VNUE-000001", "status": "Completed", "inflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "30000"}], "outflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "10000"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}], "flowHash": "6fe834fd3ab3305ddffbe50f8c64b8d94b94d11f3aa7271459d9f493ebb91abf", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "tradeIdentifiers": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"], "startedAt": "2020-09-08T11:19:00.000+00:00", "completedAt": "2020-09-08T11:20:00.000+00:00", "error": ""}}], "type": "array"}}}}}, "security": [], "operationId": "mark-webhook-as-delivered", "deprecated": false}}, "/v1/webhooks/{sequenceNumber}": {"get": {"summary": "Get a Webhook", "tags": ["Webhooks"], "parameters": [{"schema": {"type": "integer"}, "in": "path", "name": "sequenceNumber", "required": true, "description": "The sequence number of the webhook"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"createdAt": "2020-09-08T11:20:00.000Z", "type": "CustomerStatusChanged", "sequenceNumber": 123, "customer": {"allowedCustodians": ["primetrust"], "custodian": "primetrust", "custodianAccountIdentifier": "321", "identifier": "123456", "name": "ACME Inc", "FIXAccountIdentifier": "ABC123", "status": "Active", "domicile": "US"}, "withdrawalRequest": {"identifier": "", "requested": [{"amount": "10.0000000", "symbol": "XXBT"}], "requestedAt": "2020-09-08T11:20:00.000+00:00"}, "deposit": {"amount": "10.00000000", "symbol": "XXBT", "identifier": "", "customerIdentifier": "", "completedAt": "2020-08-24T08:51:43.000+00:00"}, "withdrawal": {"identifier": "", "customerIdentifier": "", "completedAt": "2020-09-08T11:20:00.000+00:00", "venueWithdrawalIdentifier": "", "amounts": [{"amount": "10.0000000", "symbol": "XXBT"}], "status": "Completed"}, "settlementPlan": {"identifier": "VNUE-000001", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "custodian": "primetrust", "flowHash": "6fe834fd3ab3305ddffbe50f8c64b8d94b94d11f3aa7271459d9f493ebb91abf", "venueFunding": {"status": "NotFunded", "fundingRequired": [{"amount": "10", "symbol": "USD"}]}, "customerFunding": [{"status": "NotFunded", "customerIdentifier": "customerId2", "fundingRequired": [{"amount": "100", "symbol": "USD"}, {"amount": "20000", "symbol": "XRP"}]}, {"status": "Funded", "customerIdentifier": "customerId1", "fundingRequired": []}], "inflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "30000"}], "outflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "10000"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}], "tradeIdentifiers": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"]}, "settlement": {"identifier": "VNUE-000001", "status": "Completed", "inflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "30000"}], "outflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "10000"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}], "flowHash": "6fe834fd3ab3305ddffbe50f8c64b8d94b94d11f3aa7271459d9f493ebb91abf", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "tradeIdentifiers": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"], "startedAt": "2020-09-08T11:19:00.000+00:00", "completedAt": "2020-09-08T11:20:00.000+00:00", "error": ""}}, "schema": {"$ref": "#/components/schemas/Webhook"}}}}}, "security": [], "operationId": "get-a-webhook", "deprecated": false}}, "/v1/sandbox/custodians/{custodianIdentifier}/deposits": {"post": {"summary": "Create Custodian Deposit", "tags": ["Sandbox"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}, {"schema": {"type": "string"}, "in": "path", "name": "custodianIdentifier", "required": true, "description": "The unique identifier of the custodian"}], "requestBody": {"content": {"application/json": {"example": {"amount": "100.00000000", "symbol": "XXBT"}, "schema": {"$ref": "#/components/schemas/Balance"}}}, "required": true}, "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"amount": "100.00000000", "symbol": "XXBT", "identifier": "207854d1-da54-4b02-bafe-e0315240b429", "status": "Completed", "createdAt": "2020-08-24T08:51:43.000+00:00", "updatedAt": "2020-08-24T08:51:43.000+00:00", "error": "", "source": ""}, "schema": {"$ref": "#/components/schemas/CustodianDeposit"}}}}}, "security": [], "operationId": "create-custodian-deposit", "deprecated": false}}, "/v1/sandbox/customers": {"post": {"summary": "Create Customer", "tags": ["Sandbox"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}], "requestBody": {"content": {"application/json": {"example": {"allowedCustodians": ["primetrust"], "name": "ACME Inc", "FIXAccountIdentifier": "123456", "domicile": "US"}, "schema": {"$ref": "#/components/schemas/CreateCustomerRequest"}}}, "required": true}, "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"allowedCustodians": ["primetrust"], "custodian": "primetrust", "custodianAccountIdentifier": "123", "identifier": "123456", "name": "ACME Inc", "FIXAccountIdentifier": "ABC123", "status": "Created", "domicile": "US"}, "schema": {"$ref": "#/components/schemas/CustomerInfo"}}}}}, "security": [], "operationId": "create-customer", "deprecated": false}}, "/v1/sandbox/customers/{custodianIdentifier}/withdrawal-requests": {"post": {"summary": "Create Customer Withdrawal Request", "tags": ["Sandbox"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}, {"schema": {"type": "string"}, "in": "path", "name": "custodianIdentifier", "required": true, "description": "The unique identifier of the custodian"}], "requestBody": {"content": {"application/json": {"example": {"requested": [{"amount": "100.00000000", "symbol": "XXBT"}, {"amount": "200.00000000", "symbol": "XETH"}]}, "schema": {"$ref": "#/components/schemas/CreateCustomerWithdrawalRequest"}}}, "required": true}, "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"identifier": "fdb91b4b-b18f-4477-92d4-0482d7b6290a", "requested": [{"amount": "100.00000000", "symbol": "XXBT"}, {"amount": "200.00000000", "symbol": "XETH"}], "requestedAt": "2020-09-07T11:17:24.000+00:00"}, "schema": {"$ref": "#/components/schemas/CustomerWithdrawalRequest"}}}}}, "security": [], "operationId": "create-customer-withdrawal-request", "deprecated": false}}, "/v1/sandbox/customers/{customerIdentifier}": {"delete": {"summary": "Sandbox Terminate Customer", "tags": ["Sandbox"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}, {"schema": {"type": "string"}, "in": "path", "name": "customerIdentifier", "required": true, "description": "The unique identifier (Strike Customer Number)"}], "responses": {"204": {"description": "", "content": {}}}, "security": [], "operationId": "sandbox-terminate-customer", "deprecated": false}}, "/v1/sandbox/customers/{customerIdentifier}/accept": {"post": {"summary": "Sandbox Activate Customer Onboarding Request", "tags": ["Sandbox"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}, {"schema": {"type": "string"}, "in": "path", "name": "customerIdentifier", "required": true, "description": "The unique identifier (Strike Customer Number)"}], "responses": {"200": {"description": "", "content": {}}}, "security": [], "operationId": "sandbox-activate-customer-onboarding-request", "deprecated": false}}, "/v1/sandbox/customers/{customerIdentifier}/deposits": {"post": {"summary": "Create Customer Deposit", "tags": ["Sandbox"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}, {"schema": {"type": "string"}, "in": "path", "name": "customerIdentifier", "required": true, "description": "The unique identifier (Strike Customer Number)"}], "requestBody": {"content": {"application/json": {"example": {"amount": "100.00000000", "symbol": "XXBT"}, "schema": {"$ref": "#/components/schemas/Balance"}}}, "required": true}, "responses": {"200": {"description": "OK", "content": {"application/json": {"example": {"amount": "100.00000000", "symbol": "XXBT", "identifier": "207854d1-da54-4b02-bafe-e0315240b429", "customerIdentifier": "123456", "completedAt": "2020-08-24T08:51:43.000+00:00"}, "schema": {"$ref": "#/components/schemas/CustomerDeposit"}}}}}, "security": [], "operationId": "create-customer-deposit", "deprecated": false}}, "/v1/sandbox/customers/{customerIdentifier}/reject": {"post": {"summary": "Sandbox Reject Customer Onboarding Request", "tags": ["Sandbox"], "parameters": [{"schema": {"type": "string"}, "in": "header", "name": "X-Idempotency-ID", "required": true, "description": "A unique identifier for this request. If the same request with this identifier has already been processed then the original response will simply be returned again without re-processing the request"}, {"schema": {"type": "string"}, "in": "path", "name": "customerIdentifier", "required": true, "description": "The unique identifier (Strike Customer Number)"}], "responses": {"200": {"description": "", "content": {}}}, "security": [], "operationId": "sandbox-reject-customer-onboarding-request", "deprecated": false}}}, "components": {"schemas": {"ApiKey": {"properties": {"apiKey": {"example": "8JIFlGNjT2iCNrTUeka18RxNrI21v1BBfmNs5FiRmXYKxeF2hLcSRGNqKS2ZRDFdgvcPqQ4XCTAyPmfCuJuuqw==", "description": "This api key", "type": "string"}, "venueIdentifier": {"example": "123456", "description": "The identifier (Strike Customer Number) of the owner of the API key", "type": "string"}, "createdBy": {"example": "test@venue.com", "description": "Email of the user that created this API key", "type": "string"}}, "example": {"apiKey": "8JIFlGNjT2iCNrTUeka18RxNrI21v1BBfmNs5FiRmXYKxeF2hLcSRGNqKS2ZRDFdgvcPqQ4XCTAyPmfCuJuuqw==", "venueIdentifier": "123456", "createdBy": "test@venue.com"}, "type": "object", "required": ["apiKey", "createdBy", "venueIdentifier"]}, "SymbolInfo": {"properties": {"symbol": {"example": "XXBT", "description": "Symbol", "type": "string"}, "strikeSymbol": {"example": "XBT", "description": "The strike symbol", "type": "string"}, "custodianSymbols": {"items": {"$ref": "#/components/schemas/CustodianSymbol"}, "example": [{"custodianIdentifier": "primetrust", "symbol": "BTC"}], "type": "array"}, "type": {"$ref": "#/components/schemas/SymbolType", "description": "Symbol Type"}, "description": {"example": "Bitcoin", "description": "Description of the Symbol", "type": "string"}, "precision": {"example": 8, "description": "Precision of this symbol", "type": "number"}}, "example": {"symbol": "XXBT", "strikeSymbol": "XBT", "custodianSymbols": [{"custodianIdentifier": "primetrust", "symbol": "BTC"}], "type": "Asset", "description": "Bitcoin", "precision": 8}, "type": "object", "required": ["custodianSymbols", "description", "precision", "strikeSymbol", "symbol", "type"]}, "CustodianSymbol": {"properties": {"custodianIdentifier": {"example": "primetrust", "description": "The unique identifier of this custodian", "type": "string"}, "symbol": {"example": "BTC", "description": "The symbol used at the custodian for this asset or currency", "type": "string"}}, "example": {"custodianIdentifier": "primetrust", "symbol": "BTC"}, "type": "object", "required": ["custodianIdentifier", "symbol"]}, "SymbolType": {"example": "Asset", "enum": ["Asset", "Currency"], "type": "string"}, "CreateCustomerOnboardingRequest": {"properties": {"custodian": {"example": "primetrust", "description": "The identifier of this customer's custodian", "type": "string"}, "name": {"example": "ACME Inc", "description": "The customer's name", "type": "string"}, "FIXAccountIdentifier": {"example": "ABC123", "description": "An identifier of this customer's account; if FIX dropcopy of trades is used, this must be supplied and must match the account identifier which will be supplied on FIX trades", "type": "string"}}, "example": {"custodian": "primetrust", "name": "ACME Inc", "FIXAccountIdentifier": "ABC123"}, "type": "object", "required": ["custodian", "name"]}, "CustomerInfoWithBalances": {"properties": {"allowedCustodians": {"items": {"type": "string"}, "example": ["primetrust"], "description": "The list of custodians allowed for this customer", "type": "array"}, "custodian": {"example": "primetrust", "description": "For customers in the Onboarding, Active or Frozen state, The identifier of this customer's custodian", "type": "string"}, "custodianAccountIdentifier": {"example": "123", "description": "For customers in the Active or Frozen state, the account identifier of this customer at the custodian", "type": "string"}, "depositBalance": {"items": {"$ref": "#/components/schemas/Balance"}, "example": [{"amount": "100.00000000", "symbol": "XXBT"}], "description": "For customers in the Active state, their available deposit balances", "type": "array"}, "identifier": {"example": "123456", "description": "The identifier (Strike Customer Number) of this customer", "type": "string"}, "name": {"example": "ACME Inc", "description": "The customer's name", "type": "string"}, "FIXAccountIdentifier": {"example": "ABC123", "description": "An identifier of this customer's account; if FIX dropcopy of trades is used, this must be supplied and must match the account identifier which will be supplied on FIX trades", "type": "string"}, "status": {"$ref": "#/components/schemas/ProviderCustomerStatus", "description": "The status of the customer"}, "domicile": {"example": "US", "description": "The ISO-3166-1 2-letter country code where this customer is domiciled", "type": "string"}}, "example": {"allowedCustodians": ["primetrust"], "custodian": "primetrust", "custodianAccountIdentifier": "123", "depositBalance": [{"amount": "100.00000000", "symbol": "XXBT"}], "identifier": "123456", "name": "ACME Inc", "FIXAccountIdentifier": "ABC123", "status": "Active", "domicile": "US"}, "type": "object", "required": ["allowedCustodians", "custodian", "domicile", "identifier", "name", "status"]}, "Balance": {"properties": {"amount": {"example": "100.00000000", "description": "The amount", "type": "string"}, "symbol": {"example": "XXBT", "description": "The asset symbol", "type": "string"}}, "example": {"amount": "100.00000000", "symbol": "XXBT"}, "type": "object", "required": ["amount", "symbol"]}, "ProviderCustomerStatus": {"example": "Active", "enum": ["Created", "Onboarding", "OnboardingRejected", "Active", "Frozen", "Closed"], "type": "string"}, "CustomerInfo": {"properties": {"allowedCustodians": {"items": {"type": "string"}, "example": ["primetrust"], "description": "The list of custodians allowed for this customer", "type": "array"}, "custodian": {"example": "primetrust", "description": "The identifier of this customer's custodian", "type": "string"}, "custodianAccountIdentifier": {"example": "321", "description": "For customers in the Active or Frozen state, the account identifier of this customer at the custodian", "type": "string"}, "identifier": {"example": "123456", "description": "The identifier (Strike Customer Number) of this customer", "type": "string"}, "name": {"example": "ACME Inc", "description": "The customer's name", "type": "string"}, "FIXAccountIdentifier": {"example": "ABC123", "description": "An identifier of this customer's account; if FIX dropcopy of trades is used, this must be supplied and must match the account identifier which will be supplied on FIX trades", "type": "string"}, "status": {"$ref": "#/components/schemas/ProviderCustomerStatus", "description": "The status of the customer"}, "domicile": {"example": "US", "description": "The ISO-3166-1 2-letter country code where this customer is domiciled", "type": "string"}}, "example": {"allowedCustodians": ["primetrust"], "custodian": "primetrust", "custodianAccountIdentifier": "321", "identifier": "123456", "name": "ACME Inc", "FIXAccountIdentifier": "ABC123", "status": "Active", "domicile": "US"}, "type": "object", "required": ["allowedCustodians", "domicile", "identifier", "name", "status"]}, "ChangeCustomer": {"properties": {"custodian": {"example": "primetrust", "description": "The custodian identifier to change the customer to. The customer must already have an account at that custodian, their trading account balance must be zero and they must have no pending transfers and no trades in any open settlement plans.", "type": "string"}, "FIXAccountIdentifier": {"example": "ABC123", "description": "The identifier of this customer's account; for use with FIX dropcopy", "type": "string"}}, "example": {"custodian": "primetrust", "FIXAccountIdentifier": "ABC123"}, "type": "object"}, "CustomerDeposit": {"properties": {"amount": {"example": "10.00000000", "description": "The amount", "type": "string"}, "symbol": {"example": "XXBT", "description": "The asset symbol", "type": "string"}, "identifier": {"example": "", "description": "The identifier of the deposit", "type": "string"}, "customerIdentifier": {"example": "", "description": "The identifier of the customer", "type": "string"}, "completedAt": {"example": "2020-08-24T08:51:43.000+00:00", "description": "The date/time the deposit completed", "type": "string"}}, "example": {"amount": "10.00000000", "symbol": "XXBT", "identifier": "", "customerIdentifier": "", "completedAt": "2020-08-24T08:51:43.000+00:00"}, "type": "object", "required": ["amount", "completedAt", "customerIdentifier", "identifier", "symbol"]}, "CustomerWithdrawal": {"properties": {"identifier": {"example": "", "description": "The Strike unique identifier for this withdrawal", "type": "string"}, "customerIdentifier": {"example": "", "description": "The identifier of the customer", "type": "string"}, "completedAt": {"example": "2020-09-08T11:20:00.000+00:00", "description": "The date/time the withdrawal completed", "type": "string"}, "venueWithdrawalIdentifier": {"example": "", "description": "A venue-supplied unique identifier for this withdrawal", "type": "string"}, "amounts": {"items": {"$ref": "#/components/schemas/Balance"}, "example": [{"amount": "10.0000000", "symbol": "XXBT"}], "description": "The amounts to withdraw", "type": "array"}, "status": {"$ref": "#/components/schemas/CustomerWithdrawalStatus", "description": "The status of the withdrawal"}}, "example": {"identifier": "", "customerIdentifier": "", "completedAt": "2020-09-08T11:20:00.000+00:00", "venueWithdrawalIdentifier": "", "amounts": [{"amount": "10.0000000", "symbol": "XXBT"}], "status": "Completed"}, "type": "object", "required": ["amounts", "customerIdentifier", "identifier", "status"]}, "CustomerWithdrawalStatus": {"example": "Completed", "enum": ["Requested", "Completed", "Failed"], "type": "string"}, "CustomerWithdrawalRequest": {"properties": {"identifier": {"example": "", "description": "Unique identifier for this withdrawal request", "type": "string"}, "requested": {"items": {"$ref": "#/components/schemas/Balance"}, "example": [{"amount": "10.0000000", "symbol": "XXBT"}], "description": "The amounts requested for withdrawal", "type": "array"}, "requestedAt": {"example": "2020-09-08T11:20:00.000+00:00", "description": "When the withdrawal request was requested", "type": "string"}}, "example": {"identifier": "", "requested": [{"amount": "10.0000000", "symbol": "XXBT"}], "requestedAt": "2020-09-08T11:20:00.000+00:00"}, "type": "object", "required": ["identifier", "requested", "requestedAt"]}, "CreatedCustomerWithdrawal": {"properties": {"identifier": {"example": "1234", "description": "Strike unique identifier of the created withdrawal", "type": "string"}}, "example": {"identifier": "1234"}, "type": "object", "required": ["identifier"]}, "WebhookSettings": {"properties": {"url": {"example": "https://localhost/webhook-handler", "description": "The URL to call when there is a webhook notification", "type": "string"}, "notificationEmail": {"example": "webhook@mailbox.com", "description": "An optional email address to notify when a webhook cannot be delivered", "type": "string"}, "retries": {"example": 10, "description": "How many times to retry a webhook notification before giving up, between 1 and 20", "type": "number"}, "retryInterval": {"example": 30, "description": "How long to wait between retries, between 1 and 120 seconds", "type": "number"}}, "example": {"url": "https://localhost/webhook-handler", "notificationEmail": "webhook@mailbox.com", "retries": 10, "retryInterval": 30}, "type": "object", "required": ["retries", "retryInterval", "url"]}, "WebhooksList": {"properties": {"webhooks": {"items": {"$ref": "#/components/schemas/Webhook"}, "example": [{"createdAt": "2020-09-08T11:20:00.000Z", "type": "CustomerStatusChanged", "sequenceNumber": 123, "customer": {"allowedCustodians": ["primetrust"], "custodian": "primetrust", "custodianAccountIdentifier": "321", "identifier": "123456", "name": "ACME Inc", "FIXAccountIdentifier": "ABC123", "status": "Active", "domicile": "US"}, "withdrawalRequest": {"identifier": "", "requested": [{"amount": "10.0000000", "symbol": "XXBT"}], "requestedAt": "2020-09-08T11:20:00.000+00:00"}, "deposit": {"amount": "10.00000000", "symbol": "XXBT", "identifier": "", "customerIdentifier": "", "completedAt": "2020-08-24T08:51:43.000+00:00"}, "withdrawal": {"identifier": "", "customerIdentifier": "", "completedAt": "2020-09-08T11:20:00.000+00:00", "venueWithdrawalIdentifier": "", "amounts": [{"amount": "10.0000000", "symbol": "XXBT"}], "status": "Completed"}, "settlementPlan": {"identifier": "VNUE-000001", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "custodian": "primetrust", "flowHash": "6fe834fd3ab3305ddffbe50f8c64b8d94b94d11f3aa7271459d9f493ebb91abf", "venueFunding": {"status": "NotFunded", "fundingRequired": [{"amount": "10", "symbol": "USD"}]}, "customerFunding": [{"status": "NotFunded", "customerIdentifier": "customerId2", "fundingRequired": [{"amount": "100", "symbol": "USD"}, {"amount": "20000", "symbol": "XRP"}]}, {"status": "Funded", "customerIdentifier": "customerId1", "fundingRequired": []}], "inflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "30000"}], "outflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "10000"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}], "tradeIdentifiers": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"]}, "settlement": {"identifier": "VNUE-000001", "status": "Completed", "inflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "30000"}], "outflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "10000"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}], "flowHash": "6fe834fd3ab3305ddffbe50f8c64b8d94b94d11f3aa7271459d9f493ebb91abf", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "tradeIdentifiers": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"], "startedAt": "2020-09-08T11:19:00.000+00:00", "completedAt": "2020-09-08T11:20:00.000+00:00", "error": ""}}], "type": "array"}, "nextWebhookSequenceNumber": {"example": 123, "description": "Sequence number to pass in the next request to continue getting the webhooks. No value implies that you have reached the end.", "type": "number"}}, "example": {"webhooks": [{"createdAt": "2020-09-08T11:20:00.000Z", "type": "CustomerStatusChanged", "sequenceNumber": 123, "customer": {"allowedCustodians": ["primetrust"], "custodian": "primetrust", "custodianAccountIdentifier": "321", "identifier": "123456", "name": "ACME Inc", "FIXAccountIdentifier": "ABC123", "status": "Active", "domicile": "US"}, "withdrawalRequest": {"identifier": "", "requested": [{"amount": "10.0000000", "symbol": "XXBT"}], "requestedAt": "2020-09-08T11:20:00.000+00:00"}, "deposit": {"amount": "10.00000000", "symbol": "XXBT", "identifier": "", "customerIdentifier": "", "completedAt": "2020-08-24T08:51:43.000+00:00"}, "withdrawal": {"identifier": "", "customerIdentifier": "", "completedAt": "2020-09-08T11:20:00.000+00:00", "venueWithdrawalIdentifier": "", "amounts": [{"amount": "10.0000000", "symbol": "XXBT"}], "status": "Completed"}, "settlementPlan": {"identifier": "VNUE-000001", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "custodian": "primetrust", "flowHash": "6fe834fd3ab3305ddffbe50f8c64b8d94b94d11f3aa7271459d9f493ebb91abf", "venueFunding": {"status": "NotFunded", "fundingRequired": [{"amount": "10", "symbol": "USD"}]}, "customerFunding": [{"status": "NotFunded", "customerIdentifier": "customerId2", "fundingRequired": [{"amount": "100", "symbol": "USD"}, {"amount": "20000", "symbol": "XRP"}]}, {"status": "Funded", "customerIdentifier": "customerId1", "fundingRequired": []}], "inflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "30000"}], "outflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "10000"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}], "tradeIdentifiers": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"]}, "settlement": {"identifier": "VNUE-000001", "status": "Completed", "inflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "30000"}], "outflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "10000"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}], "flowHash": "6fe834fd3ab3305ddffbe50f8c64b8d94b94d11f3aa7271459d9f493ebb91abf", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "tradeIdentifiers": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"], "startedAt": "2020-09-08T11:19:00.000+00:00", "completedAt": "2020-09-08T11:20:00.000+00:00", "error": ""}}], "nextWebhookSequenceNumber": 123}, "type": "object", "required": ["webhooks"]}, "Webhook": {"properties": {"createdAt": {"example": "2020-09-08T11:20:00.000Z", "description": "The date/time the webhook was created", "type": "string"}, "type": {"$ref": "#/components/schemas/WebhookType", "description": "The type of webhook message"}, "sequenceNumber": {"example": 123, "description": "The sequence number of this webhook", "type": "number"}, "customer": {"$ref": "#/components/schemas/CustomerInfo", "description": "Populated for CustomerStatusChanged"}, "withdrawalRequest": {"$ref": "#/components/schemas/CustomerWithdrawalRequest", "description": "Populated for CustomerWithdrawalRequested"}, "deposit": {"$ref": "#/components/schemas/CustomerDeposit", "description": "Populated for CustomerDepositCompleted"}, "withdrawal": {"$ref": "#/components/schemas/CustomerWithdrawal", "description": "Populated for WithdrawalStatusChanged"}, "settlementPlan": {"$ref": "#/components/schemas/SettlementPlan", "description": "Populated for SettlementFundingStatusChanged"}, "settlement": {"$ref": "#/components/schemas/Settlement", "description": "Populated for SettlementStatusChanged"}}, "example": {"createdAt": "2020-09-08T11:20:00.000Z", "type": "CustomerStatusChanged", "sequenceNumber": 123, "customer": {"allowedCustodians": ["primetrust"], "custodian": "primetrust", "custodianAccountIdentifier": "321", "identifier": "123456", "name": "ACME Inc", "FIXAccountIdentifier": "ABC123", "status": "Active", "domicile": "US"}, "withdrawalRequest": {"identifier": "", "requested": [{"amount": "10.0000000", "symbol": "XXBT"}], "requestedAt": "2020-09-08T11:20:00.000+00:00"}, "deposit": {"amount": "10.00000000", "symbol": "XXBT", "identifier": "", "customerIdentifier": "", "completedAt": "2020-08-24T08:51:43.000+00:00"}, "withdrawal": {"identifier": "", "customerIdentifier": "", "completedAt": "2020-09-08T11:20:00.000+00:00", "venueWithdrawalIdentifier": "", "amounts": [{"amount": "10.0000000", "symbol": "XXBT"}], "status": "Completed"}, "settlementPlan": {"identifier": "VNUE-000001", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "custodian": "primetrust", "flowHash": "6fe834fd3ab3305ddffbe50f8c64b8d94b94d11f3aa7271459d9f493ebb91abf", "venueFunding": {"status": "NotFunded", "fundingRequired": [{"amount": "10", "symbol": "USD"}]}, "customerFunding": [{"status": "NotFunded", "customerIdentifier": "customerId2", "fundingRequired": [{"amount": "100", "symbol": "USD"}, {"amount": "20000", "symbol": "XRP"}]}, {"status": "Funded", "customerIdentifier": "customerId1", "fundingRequired": []}], "inflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "30000"}], "outflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "10000"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}], "tradeIdentifiers": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"]}, "settlement": {"identifier": "VNUE-000001", "status": "Completed", "inflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "30000"}], "outflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "10000"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}], "flowHash": "6fe834fd3ab3305ddffbe50f8c64b8d94b94d11f3aa7271459d9f493ebb91abf", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "tradeIdentifiers": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"], "startedAt": "2020-09-08T11:19:00.000+00:00", "completedAt": "2020-09-08T11:20:00.000+00:00", "error": ""}}, "type": "object", "required": ["createdAt", "sequenceNumber", "type"]}, "WebhookType": {"example": "CustomerStatusChanged", "enum": ["CustomerStatusChanged", "CustomerWithdrawalRequested", "CustomerDepositCompleted", "SettlementFundingStatusChanged", "SettlementStatusChanged", "WithdrawalStatusChanged"], "type": "string"}, "SettlementPlan": {"properties": {"identifier": {"example": "VNUE-000001", "description": "The identifier of this settlement plan", "type": "string"}, "settlementHash": {"example": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "description": "The Strike Settlement Hash, which is computed from the hash of all of the included trades", "type": "string"}, "custodian": {"example": "primetrust", "description": "The identifier of the custodian for this settlement plan", "type": "string"}, "flowHash": {"example": "6fe834fd3ab3305ddffbe50f8c64b8d94b94d11f3aa7271459d9f493ebb91abf", "description": "The Strike Settlement Flow Hash, which is computed from the flows", "type": "string"}, "venueFunding": {"$ref": "#/components/schemas/SettlementVenueFunding", "description": "The funding status of the venue"}, "customerFunding": {"items": {"$ref": "#/components/schemas/SettlementCustomerFunding"}, "example": [{"status": "NotFunded", "customerIdentifier": "customerId2", "fundingRequired": [{"amount": "100", "symbol": "USD"}, {"amount": "20000", "symbol": "XRP"}]}, {"status": "Funded", "customerIdentifier": "customerId1", "fundingRequired": []}], "description": "The funding status of each customer in this settlement", "type": "array"}, "inflows": {"items": {"$ref": "#/components/schemas/SettlementFlow"}, "example": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "30000"}], "description": "A list of the inflows for this settlement", "type": "array"}, "outflows": {"items": {"$ref": "#/components/schemas/SettlementFlow"}, "example": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "10000"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}], "description": "A list of the outflows for this settlement", "type": "array"}, "tradeIdentifiers": {"items": {"type": "string"}, "example": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"], "description": "A list of tradeIdentifiers (venue unique trade identifiers)", "type": "array"}}, "example": {"identifier": "VNUE-000001", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "custodian": "primetrust", "flowHash": "6fe834fd3ab3305ddffbe50f8c64b8d94b94d11f3aa7271459d9f493ebb91abf", "venueFunding": {"status": "NotFunded", "fundingRequired": [{"amount": "10", "symbol": "USD"}]}, "customerFunding": [{"status": "NotFunded", "customerIdentifier": "customerId2", "fundingRequired": [{"amount": "100", "symbol": "USD"}, {"amount": "20000", "symbol": "XRP"}]}, {"status": "Funded", "customerIdentifier": "customerId1", "fundingRequired": []}], "inflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "30000"}], "outflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "10000"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}], "tradeIdentifiers": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"]}, "type": "object", "required": ["custodian", "customerFunding", "flowHash", "identifier", "inflows", "outflows", "settlementHash", "tradeIdentifiers", "venueFunding"]}, "SettlementVenueFunding": {"properties": {"status": {"$ref": "#/components/schemas/FundingStatus", "description": "The identifier of this settlement plan"}, "fundingRequired": {"items": {"$ref": "#/components/schemas/Balance"}, "example": [{"amount": "10", "symbol": "USD"}], "description": "A list of all funding amounts required for the venue", "type": "array"}}, "example": {"status": "NotFunded", "fundingRequired": [{"amount": "10", "symbol": "USD"}]}, "type": "object", "required": ["fundingRequired", "status"]}, "FundingStatus": {"example": "NotFunded", "enum": ["Funded", "NotFunded"], "type": "string"}, "SettlementCustomerFunding": {"properties": {"status": {"$ref": "#/components/schemas/FundingStatus", "description": "The identifier of this settlement plan"}, "customerIdentifier": {"example": "customerId2", "description": "The identifier for this customer", "type": "string"}, "fundingRequired": {"items": {"$ref": "#/components/schemas/Balance"}, "example": [{"amount": "100", "symbol": "USD"}, {"amount": "20000", "symbol": "XRP"}], "description": "A list of all funding amounts required for this customer", "type": "array"}}, "example": {"status": "NotFunded", "customerIdentifier": "customerId2", "fundingRequired": [{"amount": "100", "symbol": "USD"}, {"amount": "20000", "symbol": "XRP"}]}, "type": "object", "required": ["customerIdentifier", "fundingRequired", "status"]}, "SettlementFlow": {"properties": {"counterpartyIdentifier": {"example": "customerId1", "description": "The identifier for the counterparty", "type": "string"}, "counterpartyCustodianIdentifier": {"example": "primetrust", "description": "The identifier for the counterparty at the custodian", "type": "string"}, "symbol": {"example": "USD", "description": "Symbol for this flow", "type": "string"}, "strikeSymbol": {"example": "USD", "description": "Strike symbol for the settlement flow", "type": "string"}, "amount": {"example": "300", "description": "amount for the settlement flow", "type": "string"}}, "example": {"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}, "type": "object", "required": ["amount", "counterpartyCustodianIdentifier", "counterpartyIdentifier", "strikeSymbol", "symbol"]}, "Settlement": {"properties": {"identifier": {"example": "VNUE-000001", "description": "The identifier (Settlement Number) for this settlement", "type": "string"}, "status": {"$ref": "#/components/schemas/SettlementStatus", "description": "The status of the settlement"}, "inflows": {"items": {"$ref": "#/components/schemas/SettlementFlow"}, "example": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "30000"}], "description": "A list of the inflows for this settlement", "type": "array"}, "outflows": {"items": {"$ref": "#/components/schemas/SettlementFlow"}, "example": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "10000"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}], "description": "A list of the outflows for this settlement", "type": "array"}, "flowHash": {"example": "6fe834fd3ab3305ddffbe50f8c64b8d94b94d11f3aa7271459d9f493ebb91abf", "description": "The Strike Settlement Flow Hash for this settlement", "type": "string"}, "settlementHash": {"example": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "description": "The Strike Settlement Hash, which is computed from the hash of all of the included trades", "type": "string"}, "tradeIdentifiers": {"items": {"type": "string"}, "example": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"], "description": "A list of tradeIdentifiers (venue unique trade identifiers)", "type": "array"}, "startedAt": {"example": "2020-09-07T11:17:23.456+00:00", "description": "The date/time the settlement started", "type": "string"}, "completedAt": {"example": "2020-09-07T11:17:24.789+00:00", "description": "The date/time the settlement completed", "type": "string"}, "error": {"example": "", "description": "If the settlement status is \"Failed\", this is populated with a description of the error", "type": "string"}}, "example": {"identifier": "VNUE-000001", "status": "Completed", "inflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "30000"}], "outflows": [{"counterpartyIdentifier": "customerId1", "counterpartyCustodianIdentifier": "primetrust", "symbol": "XRP", "strikeSymbol": "XRP", "amount": "10000"}, {"counterpartyIdentifier": "customerId2", "counterpartyCustodianIdentifier": "primetrust", "symbol": "USD", "strikeSymbol": "USD", "amount": "300"}], "flowHash": "6fe834fd3ab3305ddffbe50f8c64b8d94b94d11f3aa7271459d9f493ebb91abf", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "tradeIdentifiers": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"], "startedAt": "2020-09-07T11:17:23.456+00:00", "completedAt": "2020-09-07T11:17:24.789+00:00", "error": ""}, "type": "object", "required": ["flowHash", "identifier", "inflows", "outflows", "settlementHash", "status", "tradeIdentifiers"]}, "SettlementStatus": {"example": "Completed", "enum": ["Requested", "Approved", "Completed", "Failed"], "type": "string"}, "TradeList": {"properties": {"continuationToken": {"example": "continuation-token", "description": "Continuation token to pass in of the next request to continue getting the trades. No continuation token implies that you have reached the end.", "type": "string"}, "trades": {"items": {"$ref": "#/components/schemas/TradeInfo"}, "example": [{"baseSymbol": "XXBT", "counter": "100000.00000000", "counterpartyIdentifier": "123456", "dealt": "10", "executionDate": "2020-09-07T11:17:23.456+00:00", "identifier": "venue-trade-identifier", "liquidityIndicator": "Aggressive", "notes": "Trade notes", "rate": "10000.00000000", "receivedDate": "2020-09-07T11:17:24.000+00:00", "settlementNumber": "KRKN-000001", "side": "Buy", "source": "source-api-key", "status": "Open", "strikeFee": "0.02", "strikeFeeSymbol": "USD", "strikeTradeId": "strike-trade-id", "termSymbol": "USD", "tradeHash": "trade-hash", "venueFee": "0.00", "venueFeeSymbol": "USD"}], "type": "array"}}, "example": {"continuationToken": "continuation-token", "trades": [{"baseSymbol": "XXBT", "counter": "100000.00000000", "counterpartyIdentifier": "123456", "dealt": "10", "executionDate": "2020-09-07T11:17:23.456+00:00", "identifier": "venue-trade-identifier", "liquidityIndicator": "Aggressive", "notes": "Trade notes", "rate": "10000.00000000", "receivedDate": "2020-09-07T11:17:24.000+00:00", "settlementNumber": "KRKN-000001", "side": "Buy", "source": "source-api-key", "status": "Open", "strikeFee": "0.02", "strikeFeeSymbol": "USD", "strikeTradeId": "strike-trade-id", "termSymbol": "USD", "tradeHash": "trade-hash", "venueFee": "0.00", "venueFeeSymbol": "USD"}]}, "type": "object", "required": ["trades"]}, "TradeInfo": {"properties": {"baseSymbol": {"example": "XXBT", "description": "Base symbol for the instrument in this trade (e.g. XBT for XBT-USD)", "type": "string"}, "counter": {"example": "100000.00000000", "description": "Notional amount for this trade in term symbol (e.g. USD for XBT-USD)", "type": "string"}, "counterpartyIdentifier": {"example": "123456", "description": "The identifier (Strike Customer Number) of the counterparty to this trade", "type": "string"}, "dealt": {"example": "10", "description": "Quantity for this trade in base symbol (e.g. XBT for XBT-USD)", "type": "string"}, "executionDate": {"example": "2020-09-07T11:17:23.456+00:00", "description": "Argument used to specify the time (in UTC) when the trade was executed", "type": "string"}, "identifier": {"example": "venue-trade-identifier", "description": "Unique identifier for the trade at this venue", "type": "string"}, "liquidityIndicator": {"$ref": "#/components/schemas/LiquidityIndicatorEnum", "description": "Liquidity indicator, only for use with exchange trades. Possible values are: Aggressive, Passive"}, "notes": {"example": "Trade notes", "description": "Optional notes/comments for this trade", "type": "string"}, "rate": {"example": "10000.00000000", "description": "Price for this trade in term symbol (e.g. USD for XBT-USD)", "type": "string"}, "receivedDate": {"example": "2020-09-07T11:17:24.000+00:00", "description": "When this trade was received by Strike", "type": "string"}, "settlementNumber": {"example": "KRKN-000001", "description": "Settlement identifier if this trade has already been settled", "type": "string"}, "side": {"$ref": "#/components/schemas/Side", "description": "Trade side from the dealer's perspective. Possible values are: Buy, Sell"}, "source": {"example": "source-api-key", "description": "The person or api key that entered this trade", "type": "string"}, "status": {"$ref": "#/components/schemas/TradeStatusType", "description": "The status of the trade"}, "strikeFee": {"example": "0.02", "description": "Fee for the trade charged by Strike in the strikeFeeSymbol symbol", "type": "string"}, "strikeFeeSymbol": {"example": "USD", "description": "The symbol the Strike fee is charged in", "type": "string"}, "strikeTradeId": {"example": "strike-trade-id", "description": "The unique identifier of this trade at Strike", "type": "string"}, "termSymbol": {"example": "USD", "description": "Term symbol for the instrument in this trade (e.g. USD for XBT-USD)", "type": "string"}, "tradeHash": {"example": "trade-hash", "description": "The Strike Trade Hash of the trade data; this must match the value that Strike computes or the trade will not be accepted", "type": "string"}, "venueFee": {"example": "0.00", "description": "Fee for the trade at this venue in the venue fee symbol", "type": "string"}, "venueFeeSymbol": {"example": "USD", "description": "Venue Fee symbol for this trade", "type": "string"}}, "example": {"baseSymbol": "XXBT", "counter": "100000.00000000", "counterpartyIdentifier": "123456", "dealt": "10", "executionDate": "2020-09-07T11:17:23.456+00:00", "identifier": "venue-trade-identifier", "liquidityIndicator": "Aggressive", "notes": "Trade notes", "rate": "10000.00000000", "receivedDate": "2020-09-07T11:17:24.000+00:00", "settlementNumber": "KRKN-000001", "side": "Buy", "source": "source-api-key", "status": "Open", "strikeFee": "0.02", "strikeFeeSymbol": "USD", "strikeTradeId": "strike-trade-id", "termSymbol": "USD", "tradeHash": "trade-hash", "venueFee": "0.00", "venueFeeSymbol": "USD"}, "type": "object", "required": ["baseSymbol", "counter", "counterpartyIdentifier", "dealt", "executionDate", "identifier", "rate", "receivedDate", "side", "source", "status", "strikeFee", "strikeFeeSymbol", "strikeTradeId", "termSymbol", "tradeHash", "venueFee", "venueFeeSymbol"]}, "LiquidityIndicatorEnum": {"example": "Aggressive", "enum": ["Aggressive", "Passive"], "type": "string"}, "Side": {"example": "Buy", "enum": ["Buy", "Sell"], "type": "string"}, "TradeStatusType": {"example": "Open", "enum": ["Open", "Settling", "Settled", "Canceled"], "type": "string"}, "SubmitTrade": {"properties": {"baseSymbol": {"example": "XBT", "description": "Base symbol for the instrument in this trade (e.g. XBT for XBT-USD)", "type": "string"}, "counter": {"example": "100000.00000000", "description": "Notional amount for this trade in term symbol (e.g. USD for XBT-USD)", "type": "string"}, "counterpartyIdentifier": {"example": "123456", "description": "The identifier (Strike Customer Number) of the counterparty to this trade", "type": "string"}, "dealt": {"example": "10", "description": "Quantity for this trade in base symbol (e.g. XBT for XBT-USD)", "type": "string"}, "executionDate": {"example": "2020-09-07T11:17:23.456+00:00", "description": "Argument used to specify the time (in UTC) when the trade was executed", "type": "string"}, "identifier": {"example": "venue-trade-identifier", "description": "Unique identifier for the trade at this venue", "type": "string"}, "liquidityIndicator": {"$ref": "#/components/schemas/LiquidityIndicatorEnum", "description": "Liquidity indicator, only for use with exchange trades. Possible values are: Aggressive, Passive"}, "notes": {"example": "Trade notes", "description": "Optional notes/comments for this trade", "type": "string"}, "rate": {"example": "10000.00000000", "description": "Price for this trade in term symbol (e.g. USD for XBT-USD)", "type": "string"}, "side": {"$ref": "#/components/schemas/Side", "description": "Trade side from the dealer's perspective. Possible values are: Buy, Sell"}, "termSymbol": {"example": "USD", "description": "Term symbol for the instrument in this trade (e.g. USD for XBT-USD)", "type": "string"}, "tradeHash": {"example": "trade-hash", "description": "The Strike Trade Hash of the trade data; this must match the value that Strike computes or the trade will not be accepted", "type": "string"}, "venueFee": {"example": "0.02", "description": "Fee for the trade at this venue in the venue fee symbol, or term symbol if not specified", "type": "string"}, "venueFeeSymbol": {"example": "USD", "description": "Optional Venue Fee symbol", "type": "string"}}, "example": {"baseSymbol": "XBT", "counter": "100000.00000000", "counterpartyIdentifier": "123456", "dealt": "10", "executionDate": "2020-09-07T11:17:23.456+00:00", "identifier": "venue-trade-identifier", "liquidityIndicator": "Aggressive", "notes": "Trade notes", "rate": "10000.00000000", "side": "Buy", "termSymbol": "USD", "tradeHash": "trade-hash", "venueFee": "0.02", "venueFeeSymbol": "USD"}, "type": "object", "required": ["baseSymbol", "counter", "counterpartyIdentifier", "dealt", "executionDate", "identifier", "rate", "side", "termSymbol", "tradeHash", "venueFee"]}, "UpdateTrade": {"properties": {"baseSymbol": {"example": "XBT", "description": "Base symbol for the instrument in this trade (e.g. XBT for XBT-USD)", "type": "string"}, "counter": {"example": "100000.00000000", "description": "Notional amount for this trade in term symbol (e.g. USD for XBT-USD)", "type": "string"}, "counterpartyIdentifier": {"example": "123456", "description": "The identifier (Strike Customer Number) of the counterparty to this trade", "type": "string"}, "dealt": {"example": "10", "description": "Quantity for this trade in base symbol (e.g. XBT for XBT-USD)", "type": "string"}, "rate": {"example": "10000.00000000", "description": "Price for this trade in term symbol (e.g. USD for XBT-USD)", "type": "string"}, "side": {"$ref": "#/components/schemas/Side", "description": "Trade side from the dealer's perspective. Possible values are: Buy, Sell"}, "termSymbol": {"example": "USD", "description": "Term symbol for the instrument in this trade (e.g. USD for XBT-USD)", "type": "string"}, "tradeHash": {"example": "trade-hash", "description": "The Strike Trade Hash of the trade data; this must match the value that Strike computes or the trade will not be accepted", "type": "string"}, "venueFee": {"example": "0.02", "description": "Fee for the trade at this venue in the venue fee symbol, or term symbol if not specified", "type": "string"}, "venueFeeSymbol": {"example": "USD", "description": "Optional Venue Fee symbol", "type": "string"}}, "example": {"baseSymbol": "XBT", "counter": "100000.00000000", "counterpartyIdentifier": "123456", "dealt": "10", "rate": "10000.00000000", "side": "Buy", "termSymbol": "USD", "tradeHash": "trade-hash", "venueFee": "0.02", "venueFeeSymbol": "USD"}, "type": "object", "required": ["tradeHash"]}, "CreateSettlementPlan": {"properties": {"custodian": {"example": "primetrust", "description": "The identifier of the custodian for this settlement plan", "type": "string"}, "tradeIdentifiers": {"items": {"type": "string"}, "example": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"], "description": "A list of tradeIdentifiers (venue unique trade identifiers)", "type": "array"}}, "example": {"custodian": "primetrust", "tradeIdentifiers": ["tradeId1", "tradeId2", "tradeId3", "tradeId4"]}, "type": "object", "required": ["custodian", "tradeIdentifiers"]}, "SettlementPlanShort": {"properties": {"identifier": {"example": "VNUE-000001", "description": "The identifier of this settlement plan", "type": "string"}, "settlementHash": {"example": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "description": "The Strike Settlement Hash, which is computed from the hash of all of the included trades", "type": "string"}}, "example": {"identifier": "VNUE-000001", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5"}, "type": "object", "required": ["identifier", "settlementHash"]}, "ModifyTradesSettlementPlan": {"properties": {"addTrades": {"items": {"type": "string"}, "example": ["tradeId1", "tradeId2"], "description": "A list of tradeIdentifiers (venue unique trade identifiers) to add to this settlement plan", "type": "array"}, "removeTrades": {"items": {"type": "string"}, "example": ["tradeId3", "tradeId4"], "description": "A list of tradeIdentifiers (venue unique trade identifiers) to remove from this settlement plan", "type": "array"}}, "example": {"addTrades": ["tradeId1", "tradeId2"], "removeTrades": ["tradeId3", "tradeId4"]}, "type": "object", "required": ["addTrades", "removeTrades"]}, "SettlementShort": {"properties": {"identifier": {"example": "VNUE-000001", "description": "The identifier of this settlement plan", "type": "string"}, "settlementHash": {"example": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "description": "The Strike Settlement Hash, which is computed from the hash of all of the included trades", "type": "string"}, "status": {"$ref": "#/components/schemas/SettlementStatus", "description": "The status of the settlement"}, "startedAt": {"example": "2020-09-07T11:17:23.456Z", "description": "The date/time the settlement started", "type": "string"}, "completedAt": {"example": "2020-09-07T11:17:24.789+00:00", "description": "The date/time the settlement completed", "type": "string"}, "error": {"example": "", "description": "If the settlement status is \"Failed\", this is populated with a description of the error", "type": "string"}}, "example": {"identifier": "VNUE-000001", "settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "status": "Completed", "startedAt": "2020-09-07T11:17:23.456Z", "completedAt": "2020-09-07T11:17:24.789+00:00", "error": ""}, "type": "object", "required": ["identifier", "settlementHash", "status"]}, "SettlementRequest": {"properties": {"settlementHash": {"example": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "description": "The Strike Settlement Hash, which is computed from the hash of all of the included trades", "type": "string"}, "signedSettlementFlowHash": {"example": "MEUCIQDUy/APgiPWDU7D7AVTWg/Jy3Ywp02Ff6P1TOtR0fWH6AIgQLxOpT8bcxX7NE8/o9k/HBAYHvnt81UH4JAHDKhJMqM=", "description": "The Strike Settlement Flow Hash, encrypted with the venue Settlement Signing key. Strike will decrypt this and validate that it matches the Settlement Flow Hash before accepting the settlement request. This will also be provided to the custodian so that they can use it for their settlement approval process.", "type": "string"}}, "example": {"settlementHash": "e76b23c00d35eacab62b6bd699149a8156bd53c8cbe17c354f4d52d2b25e2bc5", "signedSettlementFlowHash": "MEUCIQDUy/APgiPWDU7D7AVTWg/Jy3Ywp02Ff6P1TOtR0fWH6AIgQLxOpT8bcxX7NE8/o9k/HBAYHvnt81UH4JAHDKhJMqM="}, "type": "object", "required": ["settlementHash", "signedSettlementFlowHash"]}, "Custodian": {"properties": {"identifier": {"example": "primetrust", "description": "The unique identifier of this custodian", "type": "string"}, "status": {"$ref": "#/components/schemas/CustodianStatus", "description": "The status of this custodian"}, "accountIdentifier": {"example": "123", "description": "For Enabled custodians, the account identifier at the custodian", "type": "string"}, "balance": {"items": {"$ref": "#/components/schemas/Balance"}, "example": [{"amount": "100.00000000", "symbol": "XXBT"}], "description": "Balance of the settlement account at this custodian", "type": "array"}}, "example": {"identifier": "primetrust", "status": "Enabled", "accountIdentifier": "123", "balance": [{"amount": "100.00000000", "symbol": "XXBT"}]}, "type": "object", "required": ["balance", "identifier", "status"]}, "CustodianStatus": {"example": "Enabled", "enum": ["Enabled", "Disabled"], "type": "string"}, "CustodianDepositInstructions": {"properties": {"symbol": {"example": "USD", "description": "The symbol for this asset or currency", "type": "string"}, "walletAddress": {"example": "", "description": "Wallet address, populated for asset symbols", "type": "string"}, "destinationTag": {"example": "", "description": "Destination tag, populated for asset symbols which require a destination tag", "type": "string"}, "signetAddress": {"example": "", "description": "Signet address, populated for currency symbols that support Signet transfers", "type": "string"}, "wireInstructions": {"$ref": "#/components/schemas/SymbolWireInstructions", "description": "Wire instructions as a JSON object, populated for currency symbols"}}, "example": {"symbol": "USD", "walletAddress": "", "destinationTag": "", "signetAddress": "", "wireInstructions": {"fields": [{"label": "Depository Bank Name", "values": ["Pacific Mercantile Bank"]}, {"label": "Bank Address", "values": ["949 South Coast Drive, Third Floor, Costa Mesa, CA 92626"]}, {"label": "Bank Phone", "values": ["1 (702) 840-4000"]}, {"label": "Credit To", "values": ["Prime Trust, LLC"]}, {"label": "Address", "values": ["330 S Rampart Ave, Suite 260, Las Vegas, NV 89145"]}, {"label": "Routing Number", "values": ["122242869"]}, {"label": "Account Number", "values": ["45585603"]}, {"label": "SWIFT Code", "values": ["PMERUS66"]}], "note": ""}}, "type": "object", "required": ["symbol"]}, "SymbolWireInstructions": {"properties": {"fields": {"items": {"$ref": "#/components/schemas/SymbolWireInstructionsField"}, "example": [{"label": "Depository Bank Name", "values": ["Pacific Mercantile Bank"]}, {"label": "Bank Address", "values": ["949 South Coast Drive, Third Floor, Costa Mesa, CA 92626"]}, {"label": "Bank Phone", "values": ["1 (702) 840-4000"]}, {"label": "Credit To", "values": ["Prime Trust, LLC"]}, {"label": "Address", "values": ["330 S Rampart Ave, Suite 260, Las Vegas, NV 89145"]}, {"label": "Routing Number", "values": ["122242869"]}, {"label": "Account Number", "values": ["45585603"]}, {"label": "SWIFT Code", "values": ["PMERUS66"]}], "description": "List of fields to display for deposit instructions", "type": "array"}, "note": {"example": "", "description": "Note", "type": "string"}}, "example": {"fields": [{"label": "Depository Bank Name", "values": ["Pacific Mercantile Bank"]}, {"label": "Bank Address", "values": ["949 South Coast Drive, Third Floor, Costa Mesa, CA 92626"]}, {"label": "Bank Phone", "values": ["1 (702) 840-4000"]}, {"label": "Credit To", "values": ["Prime Trust, LLC"]}, {"label": "Address", "values": ["330 S Rampart Ave, Suite 260, Las Vegas, NV 89145"]}, {"label": "Routing Number", "values": ["122242869"]}, {"label": "Account Number", "values": ["45585603"]}, {"label": "SWIFT Code", "values": ["PMERUS66"]}], "note": ""}, "type": "object", "required": ["fields"]}, "SymbolWireInstructionsField": {"properties": {"label": {"example": "Depository Bank Name", "description": "The label of this field", "type": "string"}, "values": {"items": {"type": "string"}, "example": ["Pacific Mercantile Bank"], "description": "A list of values to display for this field, one per line", "type": "array"}}, "example": {"label": "Depository Bank Name", "values": ["Pacific Mercantile Bank"]}, "type": "object", "required": ["label", "values"]}, "CustodianDeposit": {"properties": {"amount": {"example": "100.00000000", "description": "The amount", "type": "string"}, "symbol": {"example": "XXBT", "description": "The asset symbol", "type": "string"}, "identifier": {"example": "207854d1-da54-4b02-bafe-e0315240b429", "description": "The identifier of the deposit", "type": "string"}, "status": {"$ref": "#/components/schemas/CustomerWithdrawalStatus", "description": "The status of the deposit"}, "createdAt": {"example": "2020-08-24T08:51:43.000+00:00", "description": "The date/time the deposit created", "type": "string"}, "updatedAt": {"example": "2020-08-24T08:51:43.000+00:00", "description": "The date/time the deposit updated", "type": "string"}, "error": {"example": "", "description": "Any error associated with this deposit if status is failed", "type": "string"}, "source": {"example": "", "description": "The source of this deposit if available", "type": "string"}}, "example": {"amount": "100.00000000", "symbol": "XXBT", "identifier": "207854d1-da54-4b02-bafe-e0315240b429", "status": "Completed", "createdAt": "2020-08-24T08:51:43.000+00:00", "updatedAt": "2020-08-24T08:51:43.000+00:00", "error": "", "source": ""}, "type": "object", "required": ["amount", "createdAt", "identifier", "status", "symbol", "updatedAt"]}, "WithdrawalDestination": {"properties": {"identifier": {"example": "5fb38f34-5c82-4b6f-b913-f8ad65b568ff", "description": "Unique identifier for the withdrawal destination", "type": "string"}, "name": {"example": "My BitCoin wallet", "description": "name for this withdrawal destination", "type": "string"}, "destinationType": {"$ref": "#/components/schemas/WithdrawalDestinationType", "description": "the type of this withdrawal destination"}, "symbol": {"example": "XXBT", "description": "symbol for this withdrawal destination, must be specified for crypto assets", "type": "string"}, "address": {"example": "1BvBMSEYstWetqTFn5Au4m4GFg7xJaNVN2", "description": "wallet address for crypto, signet address for signet", "type": "string"}, "destinationTag": {"example": "", "description": "optional destination tag if required for the specific asset", "type": "string"}, "status": {"$ref": "#/components/schemas/WithdrawalDestinationStatus", "description": "Status for this request"}, "createdAt": {"example": "2020-09-07T11:17:24.000+00:00", "description": "when this destination was created", "type": "string"}, "updatedAt": {"example": "2020-09-07T11:17:24.000+00:00", "description": "when this destination was updated", "type": "string"}}, "example": {"identifier": "5fb38f34-5c82-4b6f-b913-f8ad65b568ff", "name": "My BitCoin wallet", "destinationType": "Crypto", "symbol": "XXBT", "address": "1BvBMSEYstWetqTFn5Au4m4GFg7xJaNVN2", "destinationTag": "", "status": "Completed", "createdAt": "2020-09-07T11:17:24.000+00:00", "updatedAt": "2020-09-07T11:17:24.000+00:00"}, "type": "object", "required": ["address", "createdAt", "destinationType", "identifier", "name", "status", "updatedAt"]}, "WithdrawalDestinationType": {"example": "Crypto", "enum": ["USBank", "InternationalBank", "Crypto", "Signet"], "type": "string"}, "WithdrawalDestinationStatus": {"example": "Completed", "enum": ["Requested", "Completed", "Failed"], "type": "string"}, "CreateWithdrawalDestination": {"properties": {"name": {"example": "My BitCoin wallet", "description": "name for this withdrawal destination", "type": "string"}, "destinationType": {"$ref": "#/components/schemas/WithdrawalDestinationType", "description": "the type of this withdrawal destination"}, "symbol": {"example": "XXBT", "description": "symbol for this withdrawal destination, must be specified for crypto assets", "type": "string"}, "bankTransferDetails": {"$ref": "#/components/schemas/BankTransferDetails", "description": "bank transfer details for FIAT currencies."}, "walletAddress": {"example": "1BvBMSEYstWetqTFn5Au4m4GFg7xJaNVN2", "description": "wallet address for crypto, signet address for signet", "type": "string"}, "destinationTag": {"example": "", "description": "optional destination tag if required for the specific asset", "type": "string"}}, "example": {"name": "My BitCoin wallet", "destinationType": "Crypto", "symbol": "XXBT", "bankTransferDetails": {"bankName": "", "bankAccountName": "", "bankAccountType": "savings", "bankAccountNumber": "", "routingNumber": "", "internationalDetails": {"intermediaryBankName": "", "intermediaryBankReference": "", "intermediaryBankAddress": {"street1": "", "street2": "", "city": "", "region": "", "postalCode": "", "country": ""}, "swiftCode": ""}}, "walletAddress": "1BvBMSEYstWetqTFn5Au4m4GFg7xJaNVN2", "destinationTag": ""}, "type": "object", "required": ["destinationType", "name"]}, "BankTransferDetails": {"properties": {"bankName": {"example": "", "description": "name for the bank", "type": "string"}, "bankAccountName": {"example": "", "description": "name for the bank account", "type": "string"}, "bankAccountType": {"$ref": "#/components/schemas/BankAccountType", "description": "type of the bank account (checking or savings) for US Banks"}, "bankAccountNumber": {"example": "", "description": "Bank account number", "type": "string"}, "routingNumber": {"example": "", "description": "routing number for US Banks", "type": "string"}, "internationalDetails": {"$ref": "#/components/schemas/InternationalTransferMethodDetails", "description": "International Details"}}, "example": {"bankName": "", "bankAccountName": "", "bankAccountType": "savings", "bankAccountNumber": "", "routingNumber": "", "internationalDetails": {"intermediaryBankName": "", "intermediaryBankReference": "", "intermediaryBankAddress": {"street1": "", "street2": "", "city": "", "region": "", "postalCode": "", "country": ""}, "swiftCode": ""}}, "type": "object", "required": ["bankAccountName", "bankAccountNumber"]}, "BankAccountType": {"example": "savings", "enum": ["checking", "savings"], "type": "string"}, "InternationalTransferMethodDetails": {"properties": {"intermediaryBankName": {"example": "", "description": "Name of an intermediary bank if required", "type": "string"}, "intermediaryBankReference": {"example": "", "description": "intermediary bank reference number", "type": "string"}, "intermediaryBankAddress": {"$ref": "#/components/schemas/Address", "description": "Intermediary Bank Address"}, "swiftCode": {"example": "", "description": "Swift Code", "type": "string"}}, "example": {"intermediaryBankName": "", "intermediaryBankReference": "", "intermediaryBankAddress": {"street1": "", "street2": "", "city": "", "region": "", "postalCode": "", "country": ""}, "swiftCode": ""}, "type": "object", "required": ["swiftCode"]}, "Address": {"properties": {"street1": {"example": "", "description": "Street 1 Address", "type": "string"}, "street2": {"example": "", "description": "Street 2 Address", "type": "string"}, "city": {"example": "", "description": "City", "type": "string"}, "region": {"example": "", "description": "Region or State", "type": "string"}, "postalCode": {"example": "", "description": "Postal or Zip code", "type": "string"}, "country": {"example": "", "description": "Country (use ISO code)", "type": "string"}}, "example": {"street1": "", "street2": "", "city": "", "region": "", "postalCode": "", "country": ""}, "type": "object", "required": ["city", "country", "postalCode", "region", "street1", "street2"]}, "CustodianWithdrawal": {"properties": {"identifier": {"example": "5fb38f34-5c82-4b6f-b913-f8ad65b568ff", "description": "The Strike unique identifier for this withdrawal", "type": "string"}, "completedAt": {"example": "2020-09-07T11:17:24.000+00:00", "description": "The date/time the withdrawal completed", "type": "string"}, "venueWithdrawalIdentifier": {"example": "abcdef4-5c82-4b6f-b913-f8ad65b568ff", "description": "A venue-supplied unique identifier for this withdrawal", "type": "string"}, "amount": {"example": "50.000000", "description": "The amount of the withdrawal", "type": "string"}, "symbol": {"example": "XXBT", "description": "The symbol of the withdrawal", "type": "string"}, "status": {"$ref": "#/components/schemas/WithdrawalStatus", "description": "The status of the withdrawal"}}, "example": {"identifier": "5fb38f34-5c82-4b6f-b913-f8ad65b568ff", "completedAt": "2020-09-07T11:17:24.000+00:00", "venueWithdrawalIdentifier": "abcdef4-5c82-4b6f-b913-f8ad65b568ff", "amount": "50.000000", "symbol": "XXBT", "status": "Completed"}, "type": "object", "required": ["amount", "identifier", "status", "symbol"]}, "WithdrawalStatus": {"example": "Completed", "enum": ["Requested", "Completed", "Failed", "PartialFailed"], "type": "string"}, "RequestCustodianWithdrawal": {"properties": {"venueWithdrawalIdentifier": {"example": "112ba456-5c82-4b6f-b913-f8ad65b568ff", "description": "A venue-supplied unique identifier for this withdrawal", "type": "string"}, "amount": {"example": "50.00000", "description": "The amount of the withdrawal", "type": "string"}, "symbol": {"example": "XXBT", "description": "The symbol of the withdrawal", "type": "string"}, "destinationIdentifier": {"example": "5fb38f34-5c82-4b6f-b913-f8ad65b568ff", "description": "Identifier of the withdrawal destination to which to send the withdrawal", "type": "string"}}, "example": {"venueWithdrawalIdentifier": "112ba456-5c82-4b6f-b913-f8ad65b568ff", "amount": "50.00000", "symbol": "XXBT", "destinationIdentifier": "5fb38f34-5c82-4b6f-b913-f8ad65b568ff"}, "type": "object", "required": ["amount", "destinationIdentifier", "symbol"]}, "CreateCustomerRequest": {"properties": {"allowedCustodians": {"items": {"type": "string"}, "example": ["primetrust"], "description": "the list of custodians this customer", "type": "array"}, "name": {"example": "ACME Inc", "description": "The customer's name", "type": "string"}, "FIXAccountIdentifier": {"example": "123456", "description": "An identifier of this customer's account; if FIX dropcopy of trades is used, this must be supplied and must match the account identifier which will be supplied on FIX trades", "type": "string"}, "domicile": {"example": "US", "description": "The ISO-3166-1 2-letter country code where this customer is domiciled", "type": "string"}}, "example": {"allowedCustodians": ["primetrust"], "name": "ACME Inc", "FIXAccountIdentifier": "123456", "domicile": "US"}, "type": "object", "required": ["allowedCustodians", "domicile", "name"]}, "CreateCustomerWithdrawalRequest": {"properties": {"requested": {"items": {"$ref": "#/components/schemas/Balance"}, "example": [{"amount": "100.00000000", "symbol": "XXBT"}, {"amount": "200.00000000", "symbol": "XETH"}], "description": "The requested amounts to withdraw", "type": "array"}}, "example": {"requested": [{"amount": "100.00000000", "symbol": "XXBT"}, {"amount": "200.00000000", "symbol": "XETH"}]}, "type": "object", "required": ["requested"]}}, "securitySchemes": {"HMAC": {"type": "http", "scheme": "StrikeHMAC", "description": "The Strike Exchange API is authentication using an HMAC, see the Exchange API User's Guide at https://docs.strikeprotocols.com/display/AD/Exchange+API+Users+Guide for details"}}}, "openapi": "3.0.0", "servers": [{"url": "https://api.strikeprotocols.com", "description": "Production server"}, {"url": "https://api-uat1.strikeprotocols.com", "description": "Sandbox server"}]}